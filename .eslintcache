[{"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx":"1","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts":"2","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx":"3","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx":"4","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx":"5","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx":"6","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx":"7","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx":"8","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx":"9","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItems.tsx":"10","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx":"11","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx":"12","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx":"13","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx":"14","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx":"15","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx":"16","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx":"17","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx":"18","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx":"19","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserEdit.tsx":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":4514,"mtime":1610072152704,"results":"24","hashOfConfig":"22"},{"size":1616,"mtime":1608064390132,"results":"25","hashOfConfig":"22"},{"size":5851,"mtime":1608062193212,"results":"26","hashOfConfig":"22"},{"size":4200,"mtime":1608062918479,"results":"27","hashOfConfig":"22"},{"size":4081,"mtime":1609961161416,"results":"28","hashOfConfig":"22"},{"size":5428,"mtime":1608081173189,"results":"29","hashOfConfig":"22"},{"size":4173,"mtime":1610052222307,"results":"30","hashOfConfig":"22"},{"size":919,"mtime":1608083751603,"results":"31","hashOfConfig":"22"},{"size":1091,"mtime":1610059201108,"results":"32","hashOfConfig":"22"},{"size":3637,"mtime":1610058545240,"results":"33","hashOfConfig":"22"},{"size":4781,"mtime":1610064604622,"results":"34","hashOfConfig":"22"},{"size":98,"mtime":1609882893875,"results":"35","hashOfConfig":"22"},{"size":950,"mtime":1610073383250,"results":"36","hashOfConfig":"22"},{"size":12046,"mtime":1610122124184,"results":"37","hashOfConfig":"22"},{"size":4003,"mtime":1610067032210,"results":"38","hashOfConfig":"22"},{"size":409,"mtime":1610034454732,"results":"39","hashOfConfig":"22"},{"size":1043,"mtime":1610069340197,"results":"40","hashOfConfig":"22"},{"size":7191,"mtime":1610074042572,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1q2qrcs",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx",[],["90","91"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx",["92"],"import React from 'react';\n// import Auth from './components/Auth/Auth';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Admin from './components/Users/Admin';\nimport FilterItems from './components/StoreItems/FilterItems';\nimport Navbar from './components/Site/Navbar'\nimport Register from './components/Auth/Register'\nimport Login from './components/Auth/Login'\nimport StoreItemsCreate from './components/StoreItems/StoreItemCreate'\nimport StoreItemsList from './components/StoreItems/StoreItemsList';\n// import StoreItemsSearch from './components/StoreItems/StoreItemsSearch';\nimport UserList from './components/Users/UserList';\nimport ItemDetailView from './components/StoreItems/ItemDetailView';\n// import UserCreate from './components/Users/UserEdit';\n// import UserEdit from './components/Users/UserEdit';\n \ntype AppState = {\n  token: string;\n  newToken: string;\n  setStoreItems: any;\n  storeItems: any[];\n  // searchTerm: string;\n  users: any[];\n  filteredItems: any[];\n  sort: any;\n}\n\nclass App extends React.Component <{}, AppState> {\n  constructor (props: {}) {\n    super(props);\n    this.state = {\n      token: '',\n      newToken: '',\n      setStoreItems: '',\n      storeItems: [],\n      // searchTerm: '',\n      users: [],\n      filteredItems: [],\n      sort: ''\n    }\n  }\n\n  fetchStoreItems = () => {\n    fetch('http://localhost:8080/listing/', {\n      method: 'GET'\n    })\n      .then(r => r.json())\n      .then(obj => this.setState({ \n        storeItems: obj.listing, \n        filteredItems: obj.listing })) // filters items based on price\n  }\n\n  fetchUsers = () => {\n    fetch('http://localhost:8080/user/all/', {\n      method: 'GET'\n    })\n      .then(r => r.json())\n      .then(obj => this.setState({ users: obj.user }))\n  }\n\n  setToken = (token: string) => {\n    if (token) {\n      this.setState({token: token})\n    } else {\n      this.setState({token: localStorage.getItem('token') || ''}) \n    }\n    localStorage.setItem('token', token)\n  }\n\n  updateToken = (newToken: any) => {\n    localStorage.setItem('token', newToken);\n    this.setState({token: newToken});\n    console.log(newToken)\n  }\n\n  clearToken = () => {\n    localStorage.clear();\n    this.setToken('');\n  }\n\n  listItems = () => {\n    this.setState(state => {\n      // if state of sort is not empty, sort based on lowest or highest price\n      if(state.sort !== '') {\n        this.state.storeItems.sort((a,b) => (this.state.sort === 'lowest') ? (a.price < b.price ? 1 : -1) : (a.price > b.price ? 1 : -1))\n      } \n      else {\n        state.storeItems.sort((a,b) => (a.id > b.id ? 1: -1));\n      }\n      return {filteredItems: this.state.storeItems};\n    })\n  }\n\n  handleChangeSort = (e: any) => {\n    this.setState({sort: e.target.value})\n    this.listItems();\n  }\n\n  componentWillMount() {\n    this.setToken('')\n    this.fetchStoreItems()\n    this.fetchUsers()\n  }\n\n  render() {\n   \n    return (\n      <div> \n        {console.log(\"App token \" + this.state.token)}\n        <Router>\n          <Navbar clickLogout={this.clearToken} sessionToken={this.state.token}/>\n          {/* <FilterItems sort={this.state.sort} handleChangeSort={this.handleChangeSort} /> */}\n          <Switch>\n            <Route path='/listing/create'><StoreItemsCreate sessionToken={this.state.token} fetchStoreItems={this.fetchStoreItems}/></Route>\n            <Route path='/user/register'><Register updateToken={this.updateToken}/></Route>\n            <Route path='/user/login' exact ><Login updateToken={this.updateToken}/></Route>\n            <Route path='/user/all' ><UserList users={this.state.users} fetchUsers={this.fetchUsers} sessionToken={this.state.token} token={this.state.token}/></Route>\n            {/* <Route path='/user/details' ><UserEdit users={this.state.users} fetchUsers={this.fetchUsers} sessionToken={this.state.token}/></Route> */}\n            <Route path='/' exact ><StoreItemsList sessionToken={this.state.token} storeItems={this.state.storeItems} fetchStoreItems={this.fetchStoreItems} sort={this.state.sort} handleChangeSort={this.handleChangeSort}/></Route>\n            <Route path='/listing/:id'><ItemDetailView itemName={''}/></Route>\n            <Route path='/user/admin'><Admin sessionToken={this.state.token} /></Route>\n          </Switch>\n        </Router>\n        {/* {this.searchTerm ? <StoreItemsSearch /> : <StoreItemsList sessionToken={this.state.token} storeItems={this.state.storeItems} fetchStoreItems={this.fetchStoreItems}/>} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx",[],["93","94"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx",["95","96"],"import React from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n// import Register from './Register';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n      Store Name\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype LoginProps = {\r\n  updateToken: any;\r\n}\r\n\r\ntype LoginState = {\r\n  email: string;\r\n  password: string;\r\n  history: string;\r\n}\r\n\r\nexport default class Login extends React.Component<LoginProps, LoginState> {\r\n  constructor (props: LoginProps) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      history: ''\r\n    }\r\n  }\r\n\r\n  setEmail = (e: any) => {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  setPassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = 'http://localhost:8080/user/login/';\r\n    const body = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj =>{ \r\n        this.props.updateToken(rObj.sessionToken)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className=\"paper\">\r\n          <Avatar className=\"avatar\" style={{backgroundColor:'#f50057'}}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form onSubmit={this.handleSubmit} className=\"formRegister\" noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange = {this.setEmail.bind(this)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange = {this.setPassword.bind(this)}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{marginTop:\"1em\", marginBottom:'0.8em'}}\r\n              className=\"submitRegister\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Link href=\"/user/register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItems.tsx",["97"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx",["98","99"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ItemDetailView from './ItemDetailView';\r\n\r\ntype ItemProps = {\r\n  item: any;\r\n  key: any;\r\n  classes: any;\r\n}\r\n\r\ntype ItemState = {\r\n  itemName: string;\r\n  storeItem: any[];\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Item extends React.Component<ItemProps, ItemState> {\r\n  state = {\r\n    searchNodes: '',\r\n    itemName: '',\r\n    storeItem: []\r\n  }\r\n\r\n  handleClick = () => {\r\n    // this.setState({\r\n    //   itemName: this.props.item.itemName\r\n    // })\r\n    fetch(`http://localhost:8080/listing/${this.props.item.id}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(r => r.json())\r\n      .then(obj => this.setState({ storeItem: obj.listing }))\r\n \r\n  }\r\n\r\n  toUpperCase = (str: string) => {\r\n    return str\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map(function(word) {\r\n        return word[0].toUpperCase() + word.substr(1);\r\n    })\r\n    .join(' ');\r\n    }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Link to={`/listing/${this.props.item.id}`} style={{textDecoration:\"none\"}} >\r\n        <Card className={classes.root} >   \r\n          <CardActionArea onClick={this.handleClick}>            \r\n            <CardMedia\r\n              className=\"media\"\r\n              // image={(this.props.item.imgURL)}\r\n              image={require(\"./../../assets/\" + this.props.item.imgURL + \".jpg\").default}\r\n              title=\"furniture\"\r\n              style={{height: 200, paddingTop: '56.25%'}}\r\n            />\r\n            <CardHeader\r\n              title={this.toUpperCase(this.props.item.itemName)}\r\n              // subheader={\"$\" + this.props.item.price}\r\n              style={{paddingBottom:'0'}}\r\n            />\r\n            <Rating id=\"rating\" name=\"size-small\" defaultValue={5} size=\"small\" readOnly style={{paddingLeft:'0.7em', color:'black'}}/>\r\n            <CardContent style={{paddingBottom:'0', paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {\"$\" + this.props.item.price}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardContent style={{paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {this.toUpperCase(this.props.item.color)}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardContent style={{ paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {this.props.item.description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        </Link>\r\n        {/* <ItemDetailView itemName={this.state.storeItem}/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n{/* <ItemDetailView item={itemObj} key={i}/> */}\r\nexport default withStyles(styles, { withTheme: true })(Item);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx",["100"],"import React from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\nimport User from './User'\r\n\r\ntype UserProps = {\r\n  users: any;\r\n  fetchUsers: any;\r\n  sessionToken: any;\r\n  token: any;\r\n}\r\n\r\nexport default class UserList extends React.Component<UserProps> {\r\n\r\n  constructor (props: UserProps) {\r\n    super(props);\r\n    this.state = {\r\n    } \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"6em\", marginBottom:'4em' }}>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              {this.props.users.map((userObj: any, i: any) => <Grid item xs={12} sm={6} md={4}>\r\n                <User user={userObj} key={i}users={this.props.users} fetchUsers={this.props.fetchUsers} sessionToken={this.props.token}/>\r\n                </Grid> )}\r\n          </Grid>      \r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx",["101","102","103","104","105","106","107"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx",["108","109"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype AdminProps = {\r\n  sessionToken: any;\r\n  classes: any;\r\n}\r\n\r\ntype AdminState = {\r\n  // email: string;\r\n  // password: string;\r\n  // isAdmin: boolean;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Admin extends React.Component <AdminProps, AdminState> {\r\n  constructor (props: AdminProps) {\r\n    super(props);\r\n    this.state = {\r\n      // email: '',\r\n      // password: '',\r\n      // isAdmin: false,\r\n    }\r\n  }\r\n\r\n  createAdmin = () => {\r\n    const url = 'http://localhost:8080/user/admin';\r\n    const body = {\r\n      // email: this.state.email,\r\n      // password: this.state.password,\r\n      // isAdmin: this.state.isAdmin\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        // this.props.sessionToken(rObj.sessionToken)\r\n        console.log(rObj)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createAdmin()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"4.8em\", marginBottom:'4em'}}>\r\n          {console.log(\"Admin loaded\")}\r\n          <h2>Admin Portal</h2>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/listing/create`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Create Listing\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/details`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Edit Customer\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/all`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"View All Customers\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Admin);;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx",["110"],"import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\ntype FilterProps = {\r\n  sort: any;\r\n  handleChangeSort: any;\r\n}\r\n\r\nclass FilterItems extends React.Component<FilterProps> {\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n          <InputLabel id=\"demo-simple-select-outlined-label\" style={{float:'right', margin:'0em 1em 0.5em 0em'}}>Sort By\r\n            <Select label=\"Sort\" className=\"form-control\" value={this.props.sort} onChange={this.props.handleChangeSort} style={{marginLeft:'0.6em', minWidth:'4em'}}>\r\n              <MenuItem value=\"\">Most Relevant</MenuItem>\r\n              <MenuItem value=\"lowest\">Price, low to high</MenuItem>\r\n              <MenuItem value=\"highest\">Price, high to low</MenuItem>\r\n            </Select>\r\n          </InputLabel>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterItems;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserEdit.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":19},{"ruleId":"111","replacedBy":"119"},{"ruleId":"113","replacedBy":"120"},{"ruleId":"115","severity":1,"message":"121","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":18},{"ruleId":"115","severity":1,"message":"122","line":2,"column":20,"nodeType":"117","messageId":"118","endLine":2,"endColumn":30},{"ruleId":"115","severity":1,"message":"123","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":22},{"ruleId":"115","severity":1,"message":"124","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":114,"column":1,"nodeType":"127","messageId":"128","endLine":114,"endColumn":49},{"ruleId":"115","severity":1,"message":"129","line":3,"column":16,"nodeType":"117","messageId":"118","endLine":3,"endColumn":27},{"ruleId":"115","severity":1,"message":"130","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"131","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":18},{"ruleId":"115","severity":1,"message":"132","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":22},{"ruleId":"115","severity":1,"message":"133","line":15,"column":8,"nodeType":"117","messageId":"118","endLine":15,"endColumn":14},{"ruleId":"115","severity":1,"message":"134","line":18,"column":8,"nodeType":"117","messageId":"118","endLine":18,"endColumn":19},{"ruleId":"115","severity":1,"message":"135","line":21,"column":8,"nodeType":"117","messageId":"118","endLine":21,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":178,"column":5,"nodeType":"138","messageId":"139","endLine":184,"endColumn":17,"fix":"140"},{"ruleId":"115","severity":1,"message":"131","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":18},{"ruleId":"115","severity":1,"message":"141","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":17},{"ruleId":"115","severity":1,"message":"142","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"@typescript-eslint/no-unused-vars","'FilterItems' is defined but never used.","Identifier","unusedVar",["143"],["144"],"'Redirect' is defined but never used.","'useHistory' is defined but never used.","'StoreItemsList' is defined but never used.","'ItemDetailView' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'GridSpacing' is defined but never used.","'Link' is defined but never used.","'CardHeader' is defined but never used.","'CardActionArea' is defined but never used.","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"145","text":"146"},"'CardMedia' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",[5057,5059],"."]