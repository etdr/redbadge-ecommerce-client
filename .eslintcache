[{"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx":"1","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts":"2","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx":"3","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx":"4","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx":"5","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx":"6","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx":"7","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx":"8","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx":"9","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx":"10","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx":"11","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx":"12","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx":"13","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx":"14","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx":"15","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx":"16","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx":"17","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx":"18","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":5545,"mtime":1610670963971,"results":"23","hashOfConfig":"21"},{"size":1616,"mtime":1608064390132,"results":"24","hashOfConfig":"21"},{"size":5851,"mtime":1608062193212,"results":"25","hashOfConfig":"21"},{"size":4200,"mtime":1608062918479,"results":"26","hashOfConfig":"21"},{"size":4689,"mtime":1610669943548,"results":"27","hashOfConfig":"21"},{"size":5661,"mtime":1610658852564,"results":"28","hashOfConfig":"21"},{"size":4423,"mtime":1610650927635,"results":"29","hashOfConfig":"21"},{"size":1107,"mtime":1610671624908,"results":"30","hashOfConfig":"21"},{"size":11145,"mtime":1610678541092,"results":"31","hashOfConfig":"21"},{"size":4980,"mtime":1610677039074,"results":"32","hashOfConfig":"21"},{"size":934,"mtime":1610664452359,"results":"33","hashOfConfig":"21"},{"size":1142,"mtime":1610676753768,"results":"34","hashOfConfig":"21"},{"size":11385,"mtime":1610655175577,"results":"35","hashOfConfig":"21"},{"size":4011,"mtime":1610138115128,"results":"36","hashOfConfig":"21"},{"size":4185,"mtime":1610680073422,"results":"37","hashOfConfig":"21"},{"size":1043,"mtime":1610069340197,"results":"38","hashOfConfig":"21"},{"size":3199,"mtime":1610676237339,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1q2qrcs",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx",[],["87","88"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx",["89"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Admin from './components/Users/Admin';\nimport FilterItems from './components/StoreItems/FilterItems';\nimport ItemDetailView from './components/StoreItems/ItemDetailView';\nimport Login from './components/Auth/Login';\nimport Navbar from './components/Site/Navbar';\nimport Register from './components/Auth/Register';\nimport StoreItemsCreate from './components/StoreItems/StoreItemCreate';\nimport StoreItemsList from './components/StoreItems/StoreItemsList';\n// import StoreItemsSearch from './components/StoreItems/StoreItemsSearch';\nimport UserList from './components/Users/UserList';\nimport StoreItemsSearch from './components/StoreItems/StoreItemsSearch';\n \ntype AppState = {\n  token: string;\n  newToken: string;\n  userId: number;\n  setStoreItems: any;\n  storeItems: any[];\n  itemId: number;\n  users: any[];\n  filteredItems: any[];\n  sort: any;\n  isAdmin: any;\n  firstName: string;\n  searchTerm: string;\n  searchItems: any[];\n}\n\nclass App extends React.Component <{}, AppState> {\n  constructor (props: {}) {\n    super(props);\n    this.state = {\n      token: '',\n      newToken: '',\n      userId: -1,\n      setStoreItems: '',\n      storeItems: [],\n      itemId: 0,\n      users: [],\n      filteredItems: [],\n      sort: '',\n      isAdmin: false,\n      firstName: '',\n      searchTerm: '',\n      searchItems: []\n    }\n  }\n\n  fetchStoreItems = () => {\n    fetch('http://localhost:8080/listing/', {\n      method: 'GET'\n    })\n      .then(r => r.json())\n      .then(obj => this.setState({ \n        storeItems: obj.listing, \n        filteredItems: obj.listing })) // filters items based on price\n  }\n\n  fetchUsers = () => {\n    fetch('http://localhost:8080/user/all/', {\n      method: 'GET'\n    })\n      .then(r => r.json())\n      .then(obj => this.setState({ users: obj.user }))\n  }\n\n  setToken = (token: string) => {\n    if (token) {\n      this.setState({token: token})\n      // this.setState({id: id})\n      // this.setState({isAdmin: isAdmin})\n    } else {\n      this.setState({token: localStorage.getItem('token') || ''}) \n      // this.setState({id: parseInt(localStorage.getItem('id')!)})\n    }\n    localStorage.setItem('token', token)\n    // localStorage.setItem('id', id)\n  }\n\n  // updates the state for the token, userId,admin status, and first name when a user logs in or registers\n  updateToken = (newToken: any, updateId: any, updateAdmin: boolean, updateFirstName: string) => {\n    localStorage.setItem('token', newToken);\n    localStorage.setItem('id', updateId)\n    this.setState({token: newToken});\n    this.setState({userId: updateId});\n    this.setState({isAdmin: updateAdmin})\n    this.setState({firstName: updateFirstName})\n    console.log('Token: ', newToken)\n    console.log(\"User id: \", updateId)\n    console.log(\"Admin? :\", updateAdmin)\n    console.log(\"User first name:\", updateFirstName)\n  }\n\n  updateSearch = (storeItem: any[]) => {\n    this.setState({ storeItems: storeItem })\n    console.log(\"search\", storeItem)\n  }\n\n  updateItemId = (itemId: any) => {\n    this.setState({ itemId: itemId })\n    console.log('itemid', itemId)\n  }\n\n  clearToken = () => {\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  listItems = () => {\n    this.setState(state => {\n      // if state of sort is not empty, sort based on lowest or highest price\n      if(state.sort !== '') {\n        this.state.storeItems.sort((a,b) => (this.state.sort === 'lowest') ? (a.price < b.price ? 1 : -1) : (a.price > b.price ? 1 : -1))\n      } \n      else {\n        state.storeItems.sort((a,b) => (a.id > b.id ? 1: -1));\n      }\n      return {filteredItems: this.state.storeItems};\n    })\n  }\n\n  handleChangeSort = (e: any) => {\n    this.setState({sort: e.target.value})\n    this.listItems();\n  }\n\n  componentWillMount() {\n    this.setToken('')\n    this.fetchStoreItems()\n    this.fetchUsers()\n  }\n\n  render() {\n   \n    return (\n      <div> \n        {/* {console.log(\"App token \" + this.state.token)} */}\n        <Router>\n          <Navbar clickLogout={this.clearToken} sessionToken={this.state.token} adminStatus={this.state.isAdmin} userFirstName={this.state.firstName} searchItems={this.state.searchItems} updateSearch={this.updateSearch} fetchStoreItems={this.fetchStoreItems} />\n          <FilterItems sort={this.state.sort} handleChangeSort={this.handleChangeSort} />\n          <Switch>\n            <Route path='/listing/create'><StoreItemsCreate sessionToken={this.state.token} fetchStoreItems={this.fetchStoreItems}/></Route>\n            <Route path='/user/register'><Register updateToken={this.updateToken} token={this.state.token}/></Route>\n            <Route path='/user/login' exact ><Login updateToken={this.updateToken} token={this.state.token} adminStatus={this.state.isAdmin}/></Route>\n            <Route path='/user/all' ><UserList users={this.state.users} fetchUsers={this.fetchUsers} sessionToken={this.state.token} token={this.state.token}/></Route>\n            <Route path='/' exact ><StoreItemsList sessionToken={this.state.token} adminStatus={this.state.isAdmin} storeItems={this.state.storeItems} fetchStoreItems={this.fetchStoreItems} sort={this.state.sort} handleChangeSort={this.handleChangeSort} updateItemId={this.updateItemId}/></Route>\n            <Route path='/listing/:id'><ItemDetailView storeItemId={this.state.itemId}/></Route>\n            <Route path='/user/admin'><Admin sessionToken={this.state.token} /></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx",[],["90","91"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx",["92","93"],"import React from 'react'\r\nimport { Link} from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport LockIcon from '@material-ui/icons/Lock'\r\nimport StoreItemsSearch from '../StoreItems/StoreItemsSearch'\r\n\r\ntype NavbarProps = {\r\n  clickLogout: any;\r\n  sessionToken: any;\r\n  adminStatus: boolean;\r\n  userFirstName: string;\r\n  fetchStoreItems: any;\r\n  searchItems: any[];\r\n  updateSearch: any;\r\n}\r\n\r\ntype NavbarState = {\r\n  searchTerm: string;\r\n}\r\n\r\nclass Navbar extends React.Component<NavbarProps, NavbarState> {\r\n  constructor (props: NavbarProps) {\r\n    super(props);\r\n    this.state = {\r\n      searchTerm: ''\r\n    }\r\n  }\r\n\r\n  // automatically creates admin account when the '/user/admin' endpoint is reached\r\n  createAdmin = () => {\r\n    const url = 'http://localhost:8080/user/admin';\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n      })\r\n  }\r\n\r\n  handleSearch = () => {\r\n    fetch(`http://localhost:8080/listing/name/${this.state.searchTerm}`, {\r\n      method: 'GET'\r\n    })\r\n    .then(r => r.json())\r\n    .then(obj => { this.props.updateSearch(obj.item )\r\n      console.log(obj.item)\r\n    })\r\n  }\r\n\r\n  setSearch = (e: any) => {\r\n    if (e.target.value) {\r\n      this.setState({ searchTerm: e.target.value });\r\n    } else {\r\n      this.props.fetchStoreItems()\r\n    }\r\n    \r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <AppBar style={{ background: '#fafafa', color: \"rgba(0, 0, 0, 0.87)\", borderBottom: \"1px solid #cccccc\", display: \"flex\"}} elevation={0} >\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className=\"storeName\">\r\n              <Link to=\"/\" style={{textDecoration: 'none', color: 'rgba(0, 0, 0, 0.87)', marginRight: '16px'}} onClick={this.props.fetchStoreItems}>Store Name</Link>\r\n            </Typography>\r\n            <div className=\"search\" style={{position: 'relative', marginLeft: 'auto', marginRight: '1.9em', \r\n              padding: '0 0 0 0.6em', borderRadius: '4px', border: '1px solid grey'}}>\r\n              <InputBase\r\n                placeholder=\"Search\"\r\n                id=\"searchTerm\"\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onChange={this.setSearch.bind(this)}\r\n              />\r\n              <IconButton edge=\"start\" size=\"small\" className=\"accountIconButton\" color=\"inherit\" aria-label=\"menu\" onClick={this.handleSearch}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </div>\r\n          {/* if the user is logged in, display a welcome message with the user's name */}\r\n            {this.props.userFirstName ?\r\n              <Typography className=\"welcomeText\" >\r\n                Welcome, {this.props.userFirstName}!\r\n              </Typography> :\r\n              null\r\n            } \r\n          {/* if the user is an admin, show the admin portal button */}\r\n            {this.props.adminStatus ? \r\n              <IconButton edge=\"start\" className=\"adminButton\" color=\"inherit\" aria-label=\"menu\" >\r\n                <Link to='/user/admin' style={{color: 'rgba(0, 0, 0, 0.87)', padding: '0.3em 0 0 0.4em'}} >\r\n                  <SupervisorAccountIcon />\r\n                </Link>\r\n              </IconButton> :\r\n              null\r\n            }\r\n          {/* display the login, shopping cart, and logout buttons for all users*/}\r\n            <IconButton edge=\"start\" className=\"accountIconButton\" color=\"inherit\" aria-label=\"menu\">\r\n              <Link to='/user/login' style={{color: 'rgba(0, 0, 0, 0.87)', padding: '0.3em 0 0 0.4em'}} >\r\n                <AccountCircleIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton edge=\"start\" className=\"cartIconButton\" color=\"inherit\" aria-label=\"menu\">\r\n              <ShoppingCartIcon />\r\n            </IconButton>\r\n            <IconButton onClick={this.props.clickLogout} edge=\"start\" className=\"lockIconButton\" color=\"inherit\" aria-label=\"menu\">\r\n                <LockIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx",["94"],"import React from 'react';\r\nimport Item from './Item';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ItemDetailView from './ItemDetailView';\r\n\r\ntype ListProps = {\r\n  sessionToken: any;\r\n  fetchStoreItems: any;\r\n  storeItems: any;\r\n  sort: any;\r\n  handleChangeSort: any;\r\n  adminStatus: boolean;\r\n  updateItemId: any;\r\n}\r\n\r\nexport default class StoreItemsList extends React.Component<ListProps> {\r\n\r\n  constructor (props: ListProps) {\r\n    super(props);\r\n    this.state = {\r\n    } \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"6em\", marginBottom:'4em' }}>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              {this.props.storeItems.map((itemObj: any, i: any) => <Grid item xs={12} sm={6} md={4}><Item item={itemObj} key={i}adminStatus={this.props.adminStatus} sessionToken={this.props.sessionToken} fetchStoreItems={this.props.fetchStoreItems} updateItemId={this.props.updateItemId}/></Grid> )}\r\n          </Grid>      \r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx",["95","96","97","98","99","100","101"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx",["102"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx",["103"],"import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype UserProps = {\r\n  user: any;\r\n  key: any;\r\n  classes: any;\r\n  users: any;\r\n  fetchUsers: any;\r\n  sessionToken: any;\r\n}\r\n\r\ntype UserState ={\r\n  user: any[];\r\n  active: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  isAdmin: boolean;\r\n  email: string;\r\n  password: string;\r\n  addressLn1: string;\r\n  addressLn2: string;\r\n  city: string;\r\n  state: string;\r\n  zipcode: number;\r\n  phone: number;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap',\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    marginTop: '0'\r\n  },\r\n})\r\n\r\nclass User extends React.Component<UserProps, UserState> {\r\n  constructor (props: UserProps) {\r\n    super(props);\r\n    this.state = {\r\n      // searchNodes: '',\r\n      user: [],\r\n      active: false,\r\n      firstName: '',\r\n      lastName: '',\r\n      isAdmin: false,\r\n      email: '',\r\n      password: '',\r\n      addressLn1: '',\r\n      addressLn2: '',\r\n      city: '',\r\n      state: '',\r\n      zipcode: 0,\r\n      phone: 0,\r\n    }\r\n  }\r\n\r\n  setFirstName = (e: any) => {\r\n    this.setState({firstName: e.target.value});\r\n  }\r\n\r\n  setLastName = (e: any) => {\r\n    this.setState({lastName: e.target.value});\r\n  }\r\n\r\n  setIsAdmin = (e: any) => {\r\n    this.setState({isAdmin: e.target.value});\r\n  }\r\n\r\n  setEmail = (e: any) => {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  setPassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  setAddressLn1 = (e: any) => {\r\n    this.setState({addressLn1: e.target.value});\r\n  }\r\n  \r\n  setAddressLn2 = (e: any) => {\r\n    this.setState({addressLn2: e.target.value});\r\n  }\r\n\r\n  setCity = (e: any) => {\r\n    this.setState({city: e.target.value});\r\n  }\r\n\r\n  setStateName = (e: any) => {\r\n    this.setState({state: e.target.value});\r\n  }\r\n\r\n  setZipcode = (e: any) => {\r\n    this.setState({zipcode: e.target.value});\r\n  }\r\n\r\n  setPhone = (e: any) => {\r\n    this.setState({phone: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = 'http://localhost:8080/user/details';\r\n    const body = {\r\n      firstName: this.state.firstName || this.props.user.firstName,\r\n      lastName: this.state.lastName || this.props.user.lastName,\r\n      isAdmin: this.state.isAdmin || this.props.user.isAdmin,\r\n      email: this.state.email || this.props.user.email,\r\n      password: this.state.password || this.props.user.password,\r\n      addressLn1: this.state.addressLn1 || this.props.user.addressLn1,\r\n      addressLn2: this.state.addressLn2 || this.props.user.addressLn2,\r\n      city: this.state.city || this.props.user.city,\r\n      state: this.state.state || this.props.user.state,\r\n      zipcode: this.state.zipcode || this.props.user.zipcode,\r\n      phone: this.state.phone || this.props.user.phone\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n        this.props.fetchUsers()\r\n        this.setState({ active: false }) // turn toggle off after editing user info\r\n      })\r\n    }\r\n\r\n  fetchUsers = () => {\r\n    fetch(`http://localhost:8080/user/${this.props.user.id}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(r => r.json())\r\n      .then(obj => this.setState({ user: obj.user }))\r\n  }\r\n\r\n  deleteUser = () => {\r\n    fetch(`http://localhost:8080/user/${this.props.user.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken\r\n            })\r\n        }) .then(() => this.props.fetchUsers())\r\n  }\r\n\r\n  toggle = () => {\r\n    const showEdit = this.state.active\r\n    this.setState({active: !showEdit})\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.fetchUsers()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Card className={classes.root} >   \r\n            <IconButton className=\"deleteButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} \r\n            onClick={e =>\r\n                    window.confirm(\"Are you sure you wish to delete this item?\") && this.deleteUser()\r\n            }>\r\n              <DeleteIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>\r\n            <IconButton className=\"createButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} onClick={this.toggle}>\r\n              <CreateIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>            \r\n          {/* display user edit form when create icon has been clicked, otherwise display user info */}\r\n            {this.state.active === false ? (\r\n              <CardContent> \r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {this.props.user.firstName  + ' ' + this.props.user.lastName}\r\n                  <br/>\r\n                  {String(this.props.user.isAdmin)}\r\n                  <br/>\r\n                  {this.props.user.email}\r\n                  <br/>\r\n                  {this.props.user.phone}\r\n                  <br/>\r\n                  {this.props.user.addressLn1}\r\n                  <br/>\r\n                  {this.props.user.addressLn2}\r\n                  <br/>\r\n                  {this.props.user.city}\r\n                  <br/>\r\n                  {this.props.user.state}\r\n                  <br/>\r\n                  {this.props.user.zipcode}\r\n                </Typography>\r\n              </CardContent>) : (\r\n              <div className=\"paper\" style={{marginTop:'0em'}}>\r\n                <form onSubmit={this.handleSubmit} className=\"formEditListing\" style={{ width: '70%' }} noValidate>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    name={\"firstName\"}\r\n                    autoFocus\r\n                    defaultValue={this.props.user.firstName}\r\n                    onChange = {this.setFirstName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    id=\"lastName\"\r\n                    defaultValue={this.props.user.lastName}\r\n                    onChange = {this.setLastName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"isAdmin\"\r\n                    label=\"Admin Access (true or false)\"\r\n                    id=\"isAdmin\"\r\n                    defaultValue={this.props.user.isAdmin}\r\n                    onChange = {this.setIsAdmin.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    defaultValue={this.props.user.email}\r\n                    onChange = {this.setEmail.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"addressLn1\"\r\n                    label=\"Address Line 1\"\r\n                    id=\"addressLn1\"\r\n                    defaultValue={this.props.user.addressLn1}\r\n                    onChange = {this.setAddressLn1.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"addressLn2\"\r\n                    label=\"Address Line 2\"\r\n                    id=\"addressLn2\"\r\n                    defaultValue={this.props.user.addressLn2}\r\n                    onChange = {this.setAddressLn2.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                    defaultValue={this.props.user.city}\r\n                    onChange = {this.setCity.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"state\"\r\n                    label=\"State\"\r\n                    id=\"state\"\r\n                    defaultValue={this.props.user.state}\r\n                    onChange = {this.setStateName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"zipcode\"\r\n                    label=\"Zipcode\"\r\n                    id=\"zipcode\"\r\n                    defaultValue={this.props.user.zipcode}\r\n                    onChange = {this.setZipcode.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    id=\"phone\"\r\n                    defaultValue={this.props.user.phone}\r\n                    onChange = {this.setPhone.bind(this)}\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{marginTop:\"1em\", marginBottom:'5em'}}\r\n                    className=\"submitCreate\" >\r\n                    Edit Customer\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(User);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx",["104","105"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype AdminProps = {\r\n  sessionToken: any;\r\n  classes: any;\r\n}\r\n\r\ntype AdminState = {\r\n  // email: string;\r\n  // password: string;\r\n  // isAdmin: boolean;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Admin extends React.Component <AdminProps, AdminState> {\r\n  constructor (props: AdminProps) {\r\n    super(props);\r\n    this.state = {\r\n      // email: '',\r\n      // password: '',\r\n      // isAdmin: false,\r\n    }\r\n  }\r\n\r\n  createAdmin = () => {\r\n    const url = 'http://localhost:8080/user/admin';\r\n    const body = {\r\n      // email: this.state.email,\r\n      // password: this.state.password,\r\n      // isAdmin: this.state.isAdmin\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        // this.props.sessionToken(rObj.sessionToken)\r\n        console.log(rObj)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createAdmin()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"4.8em\", marginBottom:'4em'}}>\r\n          {console.log(\"Admin loaded\")}\r\n          <h2>Admin Portal</h2>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/listing/create`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Create Listing\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/details`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Edit Customer\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid> */}\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/all`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"View All Customers\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Admin);;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx",["106"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx",["107"],"import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\ntype FilterProps = {\r\n  sort: any;\r\n  handleChangeSort: any;\r\n}\r\n\r\nclass FilterItems extends React.Component<FilterProps> {\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n          <InputLabel id=\"demo-simple-select-outlined-label\" style={{float:'right', margin:'0em 1em 0.5em 0em'}}>Sort By\r\n            <Select label=\"Sort\" className=\"form-control\" value={this.props.sort} onChange={this.props.handleChangeSort} style={{marginLeft:'0.6em', minWidth:'4em'}}>\r\n              <MenuItem value=\"\">Most Relevant</MenuItem>\r\n              <MenuItem value=\"lowest\">Price, low to high</MenuItem>\r\n              <MenuItem value=\"highest\">Price, high to low</MenuItem>\r\n            </Select>\r\n          </InputLabel>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterItems;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx",["108","109","110","111","112","113"],"import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Rating, { IconContainerProps } from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype ReviewsProps = {\r\n  classes: any;\r\n  // showState: boolean;\r\n  // reviewItem: any;\r\n  revObj: any;\r\n  key: number;\r\n}\r\n\r\ntype ReviewsState = {\r\n  user: any;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    // overflow:'scroll',\r\n  },\r\n})\r\n\r\nclass Reviews extends React.Component<ReviewsProps, ReviewsState> {\r\n  constructor (props: ReviewsProps) {\r\n    super(props);\r\n      this.state = {\r\n        user: ''\r\n      }\r\n    }\r\n\r\n  fetchUsers = () => {\r\n    fetch(`http://localhost:8080/user/${this.props.revObj.userId}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(r => r.json())\r\n      .then(obj => this.setState({ user: obj.user }))\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchUsers();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        {/* <div  className={classes.paper}> */}\r\n          <Card className={classes.root} >\r\n          {console.log(\"revObj\", this.props.revObj.rating)}\r\n            <CardContent style={{ paddingTop:'1em'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                <PersonIcon /> {this.state.user.firstName}\r\n              </Typography>\r\n            </CardContent>\r\n            {/* <Box component=\"fieldset\" mb={3} borderColor=\"transparent\"> */}\r\n              <Rating\r\n                name=\"customized-empty\"\r\n                defaultValue={this.props.revObj.rating}\r\n                precision={0.5}\r\n                readOnly\r\n                size=\"small\"\r\n                style={{paddingLeft:'0.7em'}}\r\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n              />\r\n            {/* </Box> */}\r\n            {/* <CardContent style={{ paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {this.props.revObj.createdAt}\r\n              </Typography>\r\n            </CardContent> */}\r\n            <CardContent style={{ paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {this.props.revObj.review}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        {/* </div> */}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Reviews);",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":24},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},{"ruleId":"118","severity":1,"message":"124","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":14,"column":8,"nodeType":"120","messageId":"121","endLine":14,"endColumn":24},{"ruleId":"118","severity":1,"message":"125","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":22},{"ruleId":"118","severity":1,"message":"126","line":10,"column":8,"nodeType":"120","messageId":"121","endLine":10,"endColumn":13},{"ruleId":"118","severity":1,"message":"127","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":15},{"ruleId":"118","severity":1,"message":"125","line":14,"column":8,"nodeType":"120","messageId":"121","endLine":14,"endColumn":22},{"ruleId":"118","severity":1,"message":"128","line":47,"column":10,"nodeType":"120","messageId":"121","endLine":47,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":161,"column":5,"nodeType":"131","messageId":"132","endLine":167,"endColumn":13,"fix":"133"},{"ruleId":"134","severity":1,"message":"135","line":224,"column":52,"nodeType":"136","messageId":"137","endLine":224,"endColumn":53},{"ruleId":"138","severity":1,"message":"139","line":339,"column":1,"nodeType":"140","messageId":"141","endLine":339,"endColumn":49},{"ruleId":"118","severity":1,"message":"142","line":5,"column":16,"nodeType":"120","messageId":"121","endLine":5,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":162,"column":5,"nodeType":"131","messageId":"132","endLine":168,"endColumn":17,"fix":"143"},{"ruleId":"118","severity":1,"message":"144","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":18},{"ruleId":"118","severity":1,"message":"145","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":17},{"ruleId":"118","severity":1,"message":"146","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":18},{"ruleId":"118","severity":1,"message":"147","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"148","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"149","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":11},{"ruleId":"118","severity":1,"message":"144","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":18},{"ruleId":"118","severity":1,"message":"145","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":17},{"ruleId":"118","severity":1,"message":"126","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":13},{"ruleId":"118","severity":1,"message":"150","line":11,"column":18,"nodeType":"120","messageId":"121","endLine":11,"endColumn":36},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"@typescript-eslint/no-unused-vars","'StoreItemsSearch' is defined but never used.","Identifier","unusedVar",["151"],["152"],"'Redirect' is defined but never used.","'ItemDetailView' is defined but never used.","'Modal' is defined but never used.","'Reviews' is defined but never used.","'modalStyle' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"153","text":"154"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'GridSpacing' is defined but never used.",{"range":"155","text":"154"},"'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'IconButton' is defined but never used.","'Component' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'IconContainerProps' is defined but never used.","no-global-assign","no-unsafe-negation",[4519,4521],".",[4396,4398]]