[{"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx":"1","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts":"2","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx":"3","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx":"4","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx":"5","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx":"6","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx":"7","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx":"8","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx":"9","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx":"10","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx":"11","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx":"12","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx":"13","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx":"14","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx":"15","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx":"16","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx":"17","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx":"18","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx":"19","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Cart.tsx":"20","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Footer.tsx":"21","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\AdminCreate.tsx":"22","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\NotFound.tsx":"23"},{"size":500,"mtime":1610994517413,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":8350,"mtime":1611880898204,"results":"27","hashOfConfig":"25"},{"size":1616,"mtime":1608064390132,"results":"28","hashOfConfig":"25"},{"size":5851,"mtime":1608062193212,"results":"29","hashOfConfig":"25"},{"size":4200,"mtime":1608062918479,"results":"30","hashOfConfig":"25"},{"size":5803,"mtime":1611881975350,"results":"31","hashOfConfig":"25"},{"size":6638,"mtime":1611880674255,"results":"32","hashOfConfig":"25"},{"size":4726,"mtime":1611880996891,"results":"33","hashOfConfig":"25"},{"size":1425,"mtime":1611880881435,"results":"34","hashOfConfig":"25"},{"size":11211,"mtime":1611804217966,"results":"35","hashOfConfig":"25"},{"size":5836,"mtime":1611803082555,"results":"36","hashOfConfig":"25"},{"size":995,"mtime":1610670881036,"results":"37","hashOfConfig":"25"},{"size":1956,"mtime":1611803092316,"results":"38","hashOfConfig":"25"},{"size":12143,"mtime":1611101748991,"results":"39","hashOfConfig":"25"},{"size":3761,"mtime":1611882061983,"results":"40","hashOfConfig":"25"},{"size":9902,"mtime":1611876584941,"results":"41","hashOfConfig":"25"},{"size":1158,"mtime":1610997147916,"results":"42","hashOfConfig":"25"},{"size":8170,"mtime":1611101519496,"results":"43","hashOfConfig":"25"},{"size":5797,"mtime":1611876765931,"results":"44","hashOfConfig":"25"},{"size":1814,"mtime":1611881731421,"results":"45","hashOfConfig":"25"},{"size":806,"mtime":1611802808815,"results":"46","hashOfConfig":"25"},{"size":1074,"mtime":1611802837398,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1q2qrcs",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx",[],["100","101"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx",["102","103"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx",[],["104","105"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx",["106"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx",["107","108"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx",["109","110"],"import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\ntype ItemProps = {\r\n  item: any;\r\n  key: number;\r\n  classes: any;\r\n  adminStatus: boolean;\r\n  sessionToken: string;\r\n  fetchStoreItems: any;\r\n  updateItemId: any;\r\n  updateItem: any;\r\n  addToCart: any;\r\n  storeItemObj: any;\r\n}\r\n\r\ntype ItemState = {\r\n  storeItem: any;\r\n  show: boolean;\r\n  itemName: string;\r\n  color: string;\r\n  description: string;\r\n  price: number;\r\n  itemNum: number;\r\n  imgURL: string;\r\n  active: boolean;\r\n  id: number;\r\n  errorStatus: boolean;\r\n  showBtn: boolean;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap',\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n  }\r\n})\r\n\r\nclass Item extends React.Component<ItemProps, ItemState> {\r\n  constructor (props: ItemProps) {\r\n    super(props);\r\n      this.state = {\r\n        // searchNodes: '',\r\n        storeItem: [],\r\n        show: false,\r\n        itemName: '',\r\n        color: '',\r\n        description: '',\r\n        price: 0,\r\n        itemNum: 0,\r\n        imgURL: '',\r\n        active: false,\r\n        id: 0,\r\n        errorStatus: false,\r\n        showBtn: false\r\n      }\r\n      this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  setItemName = (e: any) => {\r\n    this.setState({itemName: e.target.value});\r\n  }\r\n\r\n  setColor = (e: any) => {\r\n    this.setState({color: e.target.value});\r\n  }\r\n\r\n  setDescription = (e: any) => {\r\n    this.setState({description: e.target.value});\r\n  }\r\n\r\n  setPrice = (e: any) => {\r\n    this.setState({price: e.target.value});\r\n  }\r\n\r\n  setItemNum = (e: any) => {\r\n    this.setState({itemNum: e.target.value});\r\n  }\r\n\r\n  setImgURL = (e: any) => {\r\n    this.setState({imgURL: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = `http://localhost:8080/listing/${this.props.item.id}`;\r\n    const body = {\r\n      itemName: this.state.itemName || this.props.item.itemName,\r\n      color: this.state.color || this.props.item.color,\r\n      description: this.state.description || this.props.item.description,\r\n      price: this.state.price || this.props.item.price,\r\n      itemNum: this.state.itemNum || this.props.item.itemNum,\r\n      imgURL: this.state.imgURL || this.props.item.imgURL,\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n        this.props.fetchStoreItems()\r\n        this.setState({ active: false }) // turn toggle off after editing item\r\n      })\r\n      .catch(err => {console.log(err); {this.setState({errorStatus: true})}})\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.updateItemId(this.props.item.id)\r\n    this.props.updateItem(this.props.item)\r\n  }\r\n\r\n  showCartButton = () => {\r\n    this.setState({ showBtn: true })\r\n  }\r\n\r\n  hideCartButton = () => {\r\n    this.setState({ showBtn: false })\r\n  }\r\n\r\n  deleteListing = () => {\r\n    fetch(`http://localhost:8080/listing/${this.props.item.id}`, {\r\n      method: 'DELETE',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      })\r\n    }) \r\n    .then(() => this.props.fetchStoreItems())\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  // toggle to show edit/delete options\r\n  toggle = () => {\r\n    const showEdit = this.state.active\r\n    this.setState({active: !showEdit})\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n     // if there is an issue fetching data, redirect to home page\r\n     if (this.state.errorStatus) {\r\n      return (<Redirect to=\"/\" />)\r\n    } \r\n    return (\r\n      <div className={classes.root} >\r\n        <Card className={classes.root} style={{borderRadius:'0px', border:'none', position:'relative'}} variant=\"outlined\" onMouseOver={this.showCartButton} onMouseLeave={this.hideCartButton} >\r\n        {/* if the user is an admin, show the delete button */}\r\n          {this.props.adminStatus ?    \r\n            <IconButton className=\"deleteButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} \r\n              onClick={e =>\r\n                      window.confirm(\"Are you sure you wish to delete this item?\") && this.deleteListing()\r\n              }>\r\n              <DeleteIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>\r\n            :\r\n            null\r\n          }\r\n        {/* if the user is an admin, show the edit button */}\r\n          {this.props.adminStatus ?    \r\n            <IconButton className=\"createButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} onClick={this.toggle}>\r\n              <CreateIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>\r\n            :\r\n            null\r\n          }\r\n          \r\n        {/* display user edit form when create icon has been clicked, otherwise display user info */}\r\n          {this.state.active === false ? \r\n            <>\r\n              <Link to={`/listing/${this.props.item.id}`} style={{textDecoration:'none', color:'black'}}>\r\n              <CardActionArea>            \r\n                <CardMedia\r\n                  className=\"media\"\r\n                  image={require(`./../../assets/${this.props.item.imgURL}.jpg`).default}\r\n                  title=\"furniture\"\r\n                  style={{height: 200, paddingTop: '56.25%'}}\r\n                  onClick={this.handleClick}\r\n                />\r\n                </CardActionArea>\r\n              </Link>\r\n              {this.state.showBtn ? \r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"secondary\" \r\n                  onClick={() => this.props.addToCart(this.props.item)}\r\n                  style={{position:'absolute', top:'35%', left:'33%', fontFamily:'Open Sans'}}>\r\n                  Add to Cart\r\n                </Button>\r\n                :\r\n                null\r\n              }\r\n              <Link to={`/listing/${this.props.item.id}`} style={{textDecoration:'none', color:'black'}}>\r\n                <CardContent style={{paddingBottom:'1em', paddingTop:'0', paddingLeft:'0', marginBottom:'2em'}} onClick={this.handleClick}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\" style={{padding:'0.4em 0 0 0', fontFamily:'Montserrat', fontWeight:900, fontSize:'1.4em', textTransform:\"capitalize\", color:'black'}}>\r\n                    {this.props.item.itemName}\r\n                  </Typography>                \r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{fontFamily:'Montserrat', fontWeight:'bold', fontSize:'16px'}}>\r\n                    ${this.props.item.price.toLocaleString()}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Link>\r\n            </>\r\n            \r\n          :\r\n            <div className=\"paper\" style={{marginTop:'0em'}}>\r\n              <form onSubmit={this.handleSubmit} className=\"formEditListing\" style={{ width: '70%', fontFamily:'Open Sans' }} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"itemName\"\r\n                  label=\"Item Name\"\r\n                  name=\"itemName\"\r\n                  autoFocus\r\n                  defaultValue={this.props.item.itemName}\r\n                  onChange = {this.setItemName.bind(this)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"itemColor\"\r\n                  label=\"Color\"\r\n                  id=\"itemColor\"\r\n                  defaultValue={this.props.item.color}\r\n                  onChange = {this.setColor.bind(this)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"itemDescription\"\r\n                  label=\"Description\"\r\n                  id=\"itemDescription\"\r\n                  defaultValue={this.props.item.description}\r\n                  onChange = {this.setDescription.bind(this)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"itemPrice\"\r\n                  label=\"Price (Do not include $)\"\r\n                  id=\"itemPrice\"\r\n                  defaultValue={this.props.item.price}\r\n                  onChange = {this.setPrice.bind(this)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"itemNum\"\r\n                  label=\"Item Number\"\r\n                  id=\"itemNum\"\r\n                  defaultValue={this.props.item.itemNum}\r\n                  onChange = {this.setItemNum.bind(this)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"image\"\r\n                  label=\"Image URL\"\r\n                  id=\"image\"\r\n                  defaultValue={this.props.item.imgURL}\r\n                  onChange = {this.setImgURL.bind(this)}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{marginTop:\"1em\", marginBottom:'5em', fontFamily:'Open Sans'}}\r\n                  className=\"submitEdit\" >\r\n                  Edit Listing\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          }\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Item);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx",["111","112","113"],"import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Button from '@material-ui/core/Button'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Reviews from './../Reviews/Reviews';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Cart from '../Site/Cart';\r\n\r\ntype ItemProps = {\r\n  sessionToken: any;\r\n  storeItemId: number;\r\n  classes: any;\r\n  userId: number;\r\n  adminStatus: boolean;\r\n  addToCart: any;\r\n  storeItemObj: any;\r\n}\r\n\r\ntype ItemState = {\r\n  itemName: string;\r\n  color: string;\r\n  description: string;\r\n  price: number;\r\n  itemNum: number;\r\n  imgURL: string;\r\n  reviews: any[];\r\n  imgPath: string;\r\n  totalRating: number;\r\n  count: number;\r\n  avgRating: number;\r\n  errorStatus: boolean;\r\n  active: boolean;\r\n  rating: number;\r\n  review: string;\r\n  date: string;\r\n  // cart: any[];\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    // display: 'flex',\r\n    // display: 'inline-block'\r\n  },\r\n  details: {\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n})\r\n\r\nclass ItemDetailView extends React.Component<ItemProps, ItemState> {\r\n  constructor (props: ItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      itemName: '',\r\n      color: '',\r\n      description: '',\r\n      price: 0,\r\n      itemNum: 0,\r\n      imgURL: '',\r\n      reviews: [],\r\n      imgPath: '',\r\n      totalRating: 0,\r\n      count: 0,\r\n      avgRating: 0,\r\n      errorStatus: false,\r\n      active: false,\r\n      rating: 0,\r\n      review: '',\r\n      date: '',\r\n      // cart: []\r\n    } \r\n    // this.handleAddToCart = this.handleAddToCart.bind(this);\r\n  }\r\n\r\n  setRating = (e: any) => {\r\n    this.setState({rating: e.target.value});\r\n  }\r\n\r\n  setReview = (e: any) => {\r\n    this.setState({review: e.target.value});\r\n  }\r\n\r\n  setDate = (e: any) => {\r\n    this.setState({date: e.target.value});\r\n  }\r\n\r\n  getItemDetails = () => {\r\n    fetch(`http://localhost:8080/listing/${this.props.storeItemId}`, {\r\n      method: 'GET'\r\n    }).then(r => r.json())\r\n      .then(obj => {\r\n        this.setState({ \r\n          itemName: obj.listing.itemName,\r\n          color: obj.listing.color,\r\n          description: obj.listing.description,\r\n          price: obj.listing.price,\r\n          itemNum: obj.listing.itemNum,\r\n          imgURL: obj.listing.imgURL\r\n        })\r\n      })\r\n      .catch(err => {this.setState({errorStatus: true})})\r\n  }\r\n\r\n  getItemReviews = () => {\r\n    fetch(`http://localhost:8080/review/item/${this.props.storeItemId}`, {\r\n      method: 'GET'\r\n    }).then(r => r.json())\r\n      .then(obj => {\r\n        this.setState({ \r\n          reviews: obj\r\n        })\r\n        // console.log(obj)\r\n    })\r\n    .catch(err => {this.setState({errorStatus: true})})\r\n  }\r\n  \r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = 'http://localhost:8080/review/create';\r\n    const body = {\r\n      rating: this.state.rating,\r\n      review: this.state.review,\r\n      date: this.state.date,\r\n      userId: this.props.userId,\r\n      storeitemId: this.props.storeItemId\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n        this.getItemReviews()\r\n        this.setState({ active: false }) // turn toggle off after creating review\r\n      })\r\n      .catch(err => console.log(err, this.props.userId, this.props.storeItemId))\r\n  }\r\n\r\n  toggle = () => {\r\n    const showEdit = this.state.active\r\n    this.setState({active: !showEdit})\r\n  }\r\n\r\n  calculateTotalRating = (rating: any) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        totalRating: (prevState.totalRating + rating),\r\n        count: (prevState.count + 1),\r\n        avgRating: (prevState.totalRating + rating) / (prevState.count + 1)\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getItemDetails();\r\n    this.getItemReviews();\r\n  }\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    // if there is an issue fetching data, redirect to home page\r\n    if (this.state.errorStatus) {\r\n      return (<Redirect to=\"/\" />)\r\n    } \r\n    // {console.log('totalrating', this.state.totalRating, 'count', this.state.count, 'avgRating', this.state.avgRating)}\r\n    return (\r\n      <div>\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n          <Link to=\"/\" style={{textDecoration:'none', color:'black'}}>\r\n            <ArrowBackIosIcon className=\"backArrow\" /> \r\n            <Typography style={{ display:'inline', fontFamily:'Open Sans', fontSize:16, verticalAlign:'7px' }}>Back</Typography>\r\n          </Link>\r\n        \r\n          <Card className=\"listingCard\" style={{borderRadius:'0px', border:'none'}} variant=\"outlined\">\r\n            {this.state.imgURL ? \r\n              <CardMedia\r\n                className=\"listingImg\"\r\n                image={require(`../../assets/${this.state.imgURL}.jpg`).default}\r\n                title=\"Listing img\"\r\n                // style={{height: 200, width: '60%', paddingTop: '35%'}}\r\n              />\r\n            : null}\r\n            <div className=\"listingDetails\">\r\n              <CardContent className={classes.content} >\r\n                <h2 id=\"itemName\" style={{ fontFamily:'Montserrat'}}>\r\n                  {this.state.itemName}\r\n                </h2>\r\n                <Rating name=\"size-medium\" value={this.state.avgRating} precision={0.5} readOnly /> \r\n                <h3 className=\"listingDesc\" style={{ fontFamily:'Open Sans', textTransform:'capitalize' }}>\r\n                  ${this.state.price.toLocaleString()}\r\n                  <br/>\r\n                  Color: {this.state.color}\r\n                </h3>\r\n                <p className=\"listingDesc\" style={{ fontFamily:'Open Sans' }}>\r\n                  <br/>\r\n                  {this.state.description}\r\n                  <br/>\r\n                  <br/>\r\n                  Item: {this.state.itemNum}\r\n                </p>\r\n                <Button variant=\"contained\" color=\"secondary\" style={{width:'98%', marginTop:'3em', fontFamily:'Open Sans'}} onClick={() => this.props.addToCart(this.props.storeItemObj)}>\r\n                  Add to Cart\r\n                </Button>\r\n              </CardContent>\r\n            </div>\r\n          </Card>\r\n        </Container>\r\n        <Container maxWidth=\"sm\" style={{ marginTop:\"6em\", marginBottom:'4em' }}>\r\n          <Grid container spacing={2} alignItems=\"center\" style={{justifyContent: 'center'}}>\r\n            {!this.props.sessionToken ? \r\n              <Button variant=\"outlined\" disabled style={{width:'98%', marginBottom:'1em', fontFamily:'Open Sans' }}>\r\n                Sign-in to Leave Review\r\n              </Button> :\r\n              <Button variant=\"outlined\" style={{width:'98%', marginBottom:'1em'}} onClick={this.toggle}>\r\n                Write A Review\r\n                </Button>}\r\n            {this.state.active ?\r\n            <div className=\"paper\" style={{marginTop:'0em'}}>\r\n              <form onSubmit={this.handleSubmit} className=\"formEditListing\" style={{ width: '70%', fontFamily:'Open Sans' }} noValidate>\r\n                <Rating\r\n                  name=\"customized-empty\"\r\n                  defaultValue={0}\r\n                  // value={this.state.rating}\r\n                  emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                  onClick={this.setRating.bind(this)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"review\"\r\n                  label=\"Review\"\r\n                  id=\"review\"\r\n                  style={{ fontFamily:'Open Sans' }}\r\n                  onChange = {this.setReview.bind(this)}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  id=\"date\"\r\n                  style={{ fontFamily:'Open Sans' }}\r\n                  onChange = {this.setDate.bind(this)}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{marginTop:\"1em\", marginBottom:'5em', fontFamily:'Open Sans' }}\r\n                  className=\"submitCreate\" >\r\n                  Create Review\r\n                </Button>\r\n              </form> \r\n            </div>:\r\n            null\r\n            }\r\n            \r\n            {this.state.reviews.map((revObj: any, i: any) => <Grid item xs={12}>\r\n              <Reviews revObj={revObj} key={i} calculateTotalRating={this.calculateTotalRating} userId={this.props.userId} adminStatus={this.props.adminStatus} sessionToken={this.props.sessionToken} fetchReviews={this.getItemReviews}/></Grid> )}\r\n          </Grid>      \r\n        </Container>\r\n        {/* <Cart cartItems={this.state.cart} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ItemDetailView);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx",["114"],"import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\ntype ReviewsProps = {\r\n  classes: any;\r\n  revObj: any;\r\n  key: number;\r\n  calculateTotalRating: any;\r\n  userId: number;\r\n  adminStatus: boolean;\r\n  sessionToken: string;\r\n  fetchReviews: any;\r\n}\r\n\r\ntype ReviewsState = {\r\n  user: any;\r\n  active: boolean;\r\n  rating: number;\r\n  review: string;\r\n  date: string;\r\n  errorStatus: boolean;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    fontFamily: 'Open Sans'\r\n    // overflow:'scroll',\r\n  },\r\n})\r\n\r\nclass Reviews extends React.Component<ReviewsProps, ReviewsState> {\r\n  constructor (props: ReviewsProps) {\r\n    super(props);\r\n      this.state = {\r\n        user: '',\r\n        active: false,\r\n        rating: 0,\r\n        review: '',\r\n        date: '',\r\n        errorStatus: false\r\n      }\r\n  } \r\n\r\n  setRating = (e: any) => {\r\n    this.setState({rating: e.target.value});\r\n  }\r\n\r\n  setReview = (e: any) => {\r\n    this.setState({review: e.target.value});\r\n  }\r\n\r\n  setDate = (e: any) => {\r\n    this.setState({date: e.target.value});\r\n  }\r\n\r\n  fetchUsers = () => {\r\n    fetch(`http://localhost:8080/user/${this.props.revObj.userId}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(r => r.json())\r\n      .then(obj => this.setState({ user: obj.user }))\r\n  }\r\n\r\n  deleteReview = () => {\r\n    fetch(`http://localhost:8080/review/${this.props.revObj.id}`, {\r\n      method: 'DELETE',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      })\r\n    }) \r\n    .then(() => this.props.fetchReviews())\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  // edit review\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = `http://localhost:8080/review/${this.props.revObj.id}`;\r\n    const body = {\r\n      rating: this.state.rating || this.props.revObj.rating,\r\n      review: this.state.review || this.props.revObj.review,\r\n      date: this.state.date || this.props.revObj.date\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n        this.props.fetchReviews()\r\n        this.setState({ active: false }) // turn toggle off after editing item\r\n      })\r\n      .catch(err => {console.log(err); {this.setState({errorStatus: true})}})\r\n  }\r\n\r\n  toggle = () => {\r\n    const showEdit = this.state.active\r\n    this.setState({active: !showEdit})\r\n  }\r\n\r\n  getRating = () => {\r\n    return this.props.calculateTotalRating(this.props.revObj.rating)\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchUsers();\r\n    this.getRating();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n          <Card className={classes.root} style={{borderRadius:'0px', border:'none'}}>\r\n          {/* if user created the review or is an admin, show the delete button */}\r\n            {this.props.userId === this.props.revObj.userId || this.props.adminStatus ? \r\n              <IconButton className=\"deleteButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} \r\n              onClick={e =>\r\n                      window.confirm(\"Are you sure you wish to delete this item?\") && this.deleteReview()\r\n              }>\r\n                <DeleteIcon style={{height:'25px', width:'25px'}}/>\r\n              </IconButton> \r\n              : \r\n              null\r\n            }\r\n          {/* if user created the review or is an admin, show the edit button */}\r\n            {this.props.userId === this.props.revObj.userId || this.props.adminStatus ? \r\n              <IconButton className=\"createButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)',  float:'right', height:'30px', width:'30px'}} onClick={this.toggle}>\r\n                <CreateIcon style={{height:'25px', width:'25px'}}/>\r\n              </IconButton>\r\n              :\r\n              null\r\n            }\r\n          {/* display review edit form when create icon has been clicked, otherwise display review */}\r\n            {this.state.active === false ? \r\n              <div>\r\n                <CardContent style={{ paddingTop:'1em'}}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ fontFamily:'Open Sans' }}>\r\n                    <PersonIcon /> {this.state.user.firstName}\r\n                    <br/>\r\n                    {this.props.revObj.date}\r\n                  </Typography>\r\n                </CardContent>\r\n                <Rating\r\n                  name=\"customized-empty\"\r\n                  defaultValue={this.props.revObj.rating}\r\n                  precision={0.5}\r\n                  readOnly\r\n                  size=\"small\"\r\n                  style={{paddingLeft:'0.7em'}}\r\n                  emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                />\r\n                <CardContent style={{ paddingTop:'0'}}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ fontFamily:'Open Sans' }}>\r\n                    {this.props.revObj.review}\r\n                  </Typography>\r\n                </CardContent>\r\n              </div>\r\n              :\r\n              <div className=\"paper\" style={{marginTop:'0em'}}>\r\n                <form onSubmit={this.handleSubmit} className=\"formEditReview\" style={{ width: '70%', fontFamily:'Open Sans' }} noValidate>\r\n                  <Rating\r\n                    name=\"customized-empty\"\r\n                    defaultValue={this.props.revObj.rating}\r\n                    emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                    onClick={this.setRating.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"review\"\r\n                    label=\"Review\"\r\n                    id=\"review\"\r\n                    style={{ fontFamily:'Open Sans' }}\r\n                    defaultValue={this.props.revObj.review}\r\n                    onChange = {this.setReview.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id=\"date\"\r\n                    style={{ fontFamily:'Open Sans' }}\r\n                    defaultValue={this.props.revObj.date}\r\n                    onChange = {this.setDate.bind(this)}\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{marginTop:\"1em\", marginBottom:'5em', fontFamily:'Open Sans' }}\r\n                    className=\"submitCreate\" >\r\n                    Edit Review\r\n                  </Button>\r\n                </form> \r\n              </div>\r\n            }\r\n          </Card>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Reviews);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Cart.tsx",["115"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\ntype CartProps = {\r\n  cartItems: any;\r\n  removeFromCart: any;\r\n}\r\n\r\ntype CartState = {\r\n  tax: number;\r\n  // taxAmount: number;\r\n  total: number;\r\n}\r\n\r\nclass Cart extends React.Component<CartProps, CartState> {\r\n  constructor (props: CartProps) {\r\n    super(props);\r\n      this.state = {\r\n        tax: 0.07,\r\n        // taxAmount: 0,\r\n        total: 0\r\n    }\r\n  }\r\n\r\n  setTax = (preTax: number) => {\r\n    console.log(preTax)\r\n    // this.setState({ taxAmount: preTax * this.state.tax})\r\n    let tax = 0.07;\r\n    return (preTax * tax);\r\n  }\r\n\r\n  render() {\r\n    // set the preTax amount\r\n    const preTax = (this.props.cartItems.reduce((a: any, c: any) => a + (c.price * c.count), 0));\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"lg\" >\r\n        <Link to=\"/\" style={{textDecoration:'none', color:'black'}}>\r\n          <ArrowBackIosIcon className=\"backArrow\"/> \r\n          <Typography style={{ display:'inline', fontFamily:'Open Sans', fontSize:16, verticalAlign:'7px' }}>Back</Typography>\r\n        </Link>\r\n        <Container component=\"main\" maxWidth=\"md\" style={{minHeight: '65vh'}}>\r\n        {/* Check to see if the cart is empty or contains items */}\r\n          {this.props.cartItems.length === 0 ? <div style={{fontFamily:'Montserrat', fontWeight:'bold'}}>Your cart is empty.</div> : <div style={{fontFamily:'Montserrat', fontWeight:'bold'}}>You have {this.props.cartItems.length} item(s) in your cart.</div>}\r\n\r\n          <Paper style={{ borderRadius:'0px', border:'none', borderTop:'1px solid #cccccc', marginTop:'20px'}} variant=\"outlined\">\r\n            {this.props.cartItems.map((item: any) => (\r\n              <Grid container direction=\"row\" spacing={3} alignItems=\"center\">\r\n                <Grid item xs={12} md={3} style={{ marginTop:'40px', paddingBottom:'0' }}>\r\n                  {item.imgURL ? \r\n                    <CardMedia\r\n                      image={require(`../../assets/${item.imgURL}.jpg`).default}\r\n                      title=\"Listing img\"\r\n                      style={{height: 5, width: '60%', paddingTop: '35%'}}\r\n                    />\r\n                  : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} style={{ paddingTop:'0', paddingBottom:'0' }}>\r\n                  <Typography variant=\"body2\" component=\"h2\" style={{padding:'0.4em 0 0 0', fontFamily:'Montserrat', fontWeight:900, fontSize:'1em', textTransform:\"capitalize\", color:'black'}}>\r\n                    {item.itemName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} style={{ paddingTop:'0', paddingBottom:'0' }}>\r\n                  <Typography variant=\"body2\" component=\"h2\" style={{padding:'0.4em 0 0 0', fontFamily:'Montserrat', fontWeight:900, fontSize:'1em', color:'black'}}>\r\n                    ${item.price.toLocaleString()} x {item.count}\r\n                  </Typography> \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    style={{ fontFamily:'Open Sans' }}\r\n                    className=\"submitRemoveFromCart\" \r\n                    onClick={() => this.props.removeFromCart(item.id)}>\r\n                    Remove\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n              {/* if the cart is empty, do not show the total and checkout button */}\r\n              { this.props.cartItems.length !== 0 ?\r\n                <Grid container direction=\"column\" alignItems=\"flex-end\" style={{marginTop:'50px', marginBottom:'100px', borderTop:'1px solid #cccccc'}}>\r\n                  {/* Display the subtotal, tax amount, and total of the order */}\r\n                  <Grid item>\r\n                    <Typography variant=\"body2\" component=\"h2\" style={{padding:'0.4em 0 0 0', fontFamily:'Montserrat', fontWeight:500, fontSize:'1em', color:'black'}}>\r\n                    Subtotal: ${preTax.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                    <br />\r\n                    Tax: ${this.setTax(preTax).toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"h2\" style={{padding:'0 0 0 0', fontFamily:'Montserrat', fontWeight:'bold', fontSize:'1em', color:'black'}}>\r\n                      Total: ${(preTax + this.setTax(preTax)).toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item style={{marginTop:'10px'}}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                      style={{ fontFamily:'Open Sans' }}\r\n                      className=\"submitCreate\" >\r\n                        Proceed to Checkout\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                : null \r\n              }\r\n          </Paper>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Footer.tsx",["116","117"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\AdminCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\NotFound.tsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":72,"column":40,"nodeType":"124","messageId":"125","endLine":72,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":81,"column":40,"nodeType":"124","messageId":"125","endLine":81,"endColumn":76},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":18},{"ruleId":"128","severity":1,"message":"134","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":137,"column":40,"nodeType":"124","messageId":"125","endLine":137,"endColumn":76},{"ruleId":"128","severity":1,"message":"135","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":27},{"ruleId":"128","severity":1,"message":"136","line":17,"column":8,"nodeType":"130","messageId":"131","endLine":17,"endColumn":18},{"ruleId":"128","severity":1,"message":"137","line":18,"column":8,"nodeType":"130","messageId":"131","endLine":18,"endColumn":12},{"ruleId":"122","severity":1,"message":"123","line":117,"column":40,"nodeType":"124","messageId":"125","endLine":117,"endColumn":76},{"ruleId":"128","severity":1,"message":"138","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"139","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":26},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["140"],["141"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'Typography' is defined but never used.","'CardHeader' is defined but never used.","'AddShoppingCartIcon' is defined but never used.","'IconButton' is defined but never used.","'Cart' is defined but never used.","'Card' is defined but never used.","'BottomNavigation' is defined but never used.","no-global-assign","no-unsafe-negation"]