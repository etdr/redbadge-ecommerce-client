[{"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx":"1","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts":"2","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx":"3","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx":"4","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx":"5","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx":"6","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx":"7","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx":"8","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx":"9","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItems.tsx":"10","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx":"11","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx":"12","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx":"13","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx":"14","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx":"15","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx":"16","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx":"17","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx":"18","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx":"19","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserEdit.tsx":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":4515,"mtime":1610141482309,"results":"24","hashOfConfig":"22"},{"size":1616,"mtime":1608064390132,"results":"25","hashOfConfig":"22"},{"size":5851,"mtime":1608062193212,"results":"26","hashOfConfig":"22"},{"size":4200,"mtime":1608062918479,"results":"27","hashOfConfig":"22"},{"size":4081,"mtime":1609961161416,"results":"28","hashOfConfig":"22"},{"size":5428,"mtime":1608081173189,"results":"29","hashOfConfig":"22"},{"size":4173,"mtime":1610052222307,"results":"30","hashOfConfig":"22"},{"size":919,"mtime":1608083751603,"results":"31","hashOfConfig":"22"},{"size":1091,"mtime":1610059201108,"results":"32","hashOfConfig":"22"},{"size":4588,"mtime":1610142287370,"results":"33","hashOfConfig":"22"},{"size":4781,"mtime":1610064604622,"results":"34","hashOfConfig":"22"},{"size":98,"mtime":1609882893875,"results":"35","hashOfConfig":"22"},{"size":950,"mtime":1610073383250,"results":"36","hashOfConfig":"22"},{"size":12046,"mtime":1610122124184,"results":"37","hashOfConfig":"22"},{"size":4011,"mtime":1610138115128,"results":"38","hashOfConfig":"22"},{"size":679,"mtime":1610141819190,"results":"39","hashOfConfig":"22"},{"size":1043,"mtime":1610069340197,"results":"40","hashOfConfig":"22"},{"size":7191,"mtime":1610074042572,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1q2qrcs",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx",[],["89","90"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx",["91"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx",[],["92","93"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx",["94","95"],"import React from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n// import Register from './Register';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n      Store Name\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype LoginProps = {\r\n  updateToken: any;\r\n}\r\n\r\ntype LoginState = {\r\n  email: string;\r\n  password: string;\r\n  history: string;\r\n}\r\n\r\nexport default class Login extends React.Component<LoginProps, LoginState> {\r\n  constructor (props: LoginProps) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      history: ''\r\n    }\r\n  }\r\n\r\n  setEmail = (e: any) => {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  setPassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = 'http://localhost:8080/user/login/';\r\n    const body = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj =>{ \r\n        this.props.updateToken(rObj.sessionToken)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className=\"paper\">\r\n          <Avatar className=\"avatar\" style={{backgroundColor:'#f50057'}}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form onSubmit={this.handleSubmit} className=\"formRegister\" noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange = {this.setEmail.bind(this)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange = {this.setPassword.bind(this)}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{marginTop:\"1em\", marginBottom:'0.8em'}}\r\n              className=\"submitRegister\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Link href=\"/user/register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItems.tsx",["96"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx",["97","98"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx",["99"],"import React from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\nimport User from './User'\r\n\r\ntype UserProps = {\r\n  users: any;\r\n  fetchUsers: any;\r\n  sessionToken: any;\r\n  token: any;\r\n}\r\n\r\nexport default class UserList extends React.Component<UserProps> {\r\n\r\n  constructor (props: UserProps) {\r\n    super(props);\r\n    this.state = {\r\n    } \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"6em\", marginBottom:'4em' }}>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              {this.props.users.map((userObj: any, i: any) => <Grid item xs={12} sm={6} md={4}>\r\n                <User user={userObj} key={i}users={this.props.users} fetchUsers={this.props.fetchUsers} sessionToken={this.props.token}/>\r\n                </Grid> )}\r\n          </Grid>      \r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx",["100","101","102","103","104","105","106"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography';\r\n// import UserEdit from '../Users/UserEdit'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import CreateIcon from '@material-ui/icons/Create'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\ntype UserProps = {\r\n  user: any;\r\n  key: any;\r\n  classes: any;\r\n  users: any;\r\n  fetchUsers: any;\r\n  sessionToken: any;\r\n}\r\n\r\ntype UserState ={\r\n  user: any[];\r\n  active: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  isAdmin: boolean;\r\n  email: string;\r\n  password: string;\r\n  addressLn1: string;\r\n  addressLn2: string;\r\n  city: string;\r\n  state: string;\r\n  zipcode: number;\r\n  phone: number;\r\n  handlePhone: any;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap',\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    marginTop: '0'\r\n  },\r\n})\r\n\r\nclass User extends React.Component<UserProps, UserState> {\r\n  constructor (props: UserProps) {\r\n    super(props);\r\n    this.state = {\r\n      // searchNodes: '',\r\n      user: [],\r\n      active: false,\r\n      firstName: '',\r\n      lastName: '',\r\n      isAdmin: false,\r\n      email: '',\r\n      password: '',\r\n      addressLn1: '',\r\n      addressLn2: '',\r\n      city: '',\r\n      state: '',\r\n      zipcode: 0,\r\n      phone: 0,\r\n      handlePhone: ''\r\n    }\r\n  }\r\n\r\n  setFirstName = (e: any) => {\r\n    this.setState({firstName: e.target.value});\r\n  }\r\n\r\n  setLastName = (e: any) => {\r\n    this.setState({lastName: e.target.value});\r\n  }\r\n\r\n  setIsAdmin = (e: any) => {\r\n    this.setState({isAdmin: e.target.value});\r\n  }\r\n\r\n  setEmail = (e: any) => {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  setPassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  setAddressLn1 = (e: any) => {\r\n    this.setState({addressLn1: e.target.value});\r\n  }\r\n  \r\n  setAddressLn2 = (e: any) => {\r\n    this.setState({addressLn2: e.target.value});\r\n  }\r\n\r\n  setCity = (e: any) => {\r\n    this.setState({city: e.target.value});\r\n  }\r\n\r\n  setStateName = (e: any) => {\r\n    this.setState({state: e.target.value});\r\n  }\r\n\r\n  setZipcode = (e: any) => {\r\n    this.setState({zipcode: e.target.value});\r\n  }\r\n\r\n  setPhone = (e: any) => {\r\n    this.setState({phone: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = 'http://localhost:8080/user/details';\r\n    const body = {\r\n      firstName: this.state.firstName || this.props.user.firstName,\r\n      lastName: this.state.lastName || this.props.user.lastName,\r\n      isAdmin: this.state.isAdmin || this.props.user.isAdmin,\r\n      email: this.state.email || this.props.user.email,\r\n      password: this.state.password || this.props.user.password,\r\n      addressLn1: this.state.addressLn1 || this.props.user.addressLn1,\r\n      addressLn2: this.state.addressLn2 || this.props.user.addressLn2,\r\n      city: this.state.city || this.props.user.city,\r\n      state: this.state.state || this.props.user.state,\r\n      zipcode: this.state.zipcode || this.props.user.zipcode,\r\n      phone: this.state.phone || this.props.user.phone\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n        this.props.fetchUsers()\r\n        this.setState({ active: false }) // turn toggle off after editing user info\r\n      })\r\n    }\r\n\r\n  fetchUsers = () => {\r\n    // this.setState({\r\n    //   itemName: this.props.item.itemName\r\n    // })\r\n    fetch(`http://localhost:8080/user/${this.props.user.id}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(r => r.json())\r\n      .then(obj => this.setState({ user: obj.user }))\r\n  }\r\n\r\n  deleteUser = () => {\r\n    fetch(`http://localhost:8080/user/${this.props.user.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken\r\n            })\r\n        }) .then(() => this.props.fetchUsers())\r\n  }\r\n\r\n  toggle = () => {\r\n    const showEdit = this.state.active\r\n    this.setState({active: !showEdit})\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.fetchUsers()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Card className={classes.root} >   \r\n            <IconButton className=\"deleteButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} \r\n            onClick={e =>\r\n                    window.confirm(\"Are you sure you wish to delete this item?\") && this.deleteUser()\r\n            }>\r\n              <DeleteIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>\r\n            <IconButton className=\"createButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} onClick={this.toggle}>\r\n              <CreateIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>            \r\n          {/* display user edit form when create icon has been clicked, otherwise display user info */}\r\n            {this.state.active === false ? (\r\n              <CardContent> \r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {this.props.user.firstName  + ' ' + this.props.user.lastName}\r\n                  <br/>\r\n                  {String(this.props.user.isAdmin)}\r\n                  <br/>\r\n                  {this.props.user.email}\r\n                  <br/>\r\n                  {this.props.user.phone}\r\n                  <br/>\r\n                  {this.props.user.addressLn1}\r\n                  <br/>\r\n                  {this.props.user.addressLn2}\r\n                  <br/>\r\n                  {this.props.user.city}\r\n                  <br/>\r\n                  {this.props.user.state}\r\n                  <br/>\r\n                  {this.props.user.zipcode}\r\n                </Typography>\r\n              </CardContent>) : (\r\n              <div className=\"paper\" style={{marginTop:'0em'}}>\r\n                <form onSubmit={this.handleSubmit} className=\"formEditListing\" style={{ width: '70%' }} noValidate>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    name={\"firstName\"}\r\n                    autoFocus\r\n                    defaultValue={this.props.user.firstName}\r\n                    onChange = {this.setFirstName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    id=\"lastName\"\r\n                    defaultValue={this.props.user.lastName}\r\n                    onChange = {this.setLastName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"isAdmin\"\r\n                    label=\"Admin Access (true or false)\"\r\n                    id=\"isAdmin\"\r\n                    defaultValue={this.props.user.isAdmin}\r\n                    onChange = {this.setIsAdmin.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    defaultValue={this.props.user.email}\r\n                    onChange = {this.setEmail.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"addressLn1\"\r\n                    label=\"Address Line 1\"\r\n                    id=\"addressLn1\"\r\n                    defaultValue={this.props.user.addressLn1}\r\n                    onChange = {this.setAddressLn1.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"addressLn2\"\r\n                    label=\"Address Line 2\"\r\n                    id=\"addressLn2\"\r\n                    defaultValue={this.props.user.addressLn2}\r\n                    onChange = {this.setAddressLn2.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                    defaultValue={this.props.user.city}\r\n                    onChange = {this.setCity.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"state\"\r\n                    label=\"State\"\r\n                    id=\"state\"\r\n                    defaultValue={this.props.user.state}\r\n                    onChange = {this.setStateName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"zipcode\"\r\n                    label=\"Zipcode\"\r\n                    id=\"zipcode\"\r\n                    defaultValue={this.props.user.zipcode}\r\n                    onChange = {this.setZipcode.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    id=\"phone\"\r\n                    defaultValue={this.props.user.phone}\r\n                    onChange = {this.setPhone.bind(this)}\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{marginTop:\"1em\", marginBottom:'5em'}}\r\n                    className=\"submitCreate\" >\r\n                    Edit Customer\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(User);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx",["107","108"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype AdminProps = {\r\n  sessionToken: any;\r\n  classes: any;\r\n}\r\n\r\ntype AdminState = {\r\n  // email: string;\r\n  // password: string;\r\n  // isAdmin: boolean;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Admin extends React.Component <AdminProps, AdminState> {\r\n  constructor (props: AdminProps) {\r\n    super(props);\r\n    this.state = {\r\n      // email: '',\r\n      // password: '',\r\n      // isAdmin: false,\r\n    }\r\n  }\r\n\r\n  createAdmin = () => {\r\n    const url = 'http://localhost:8080/user/admin';\r\n    const body = {\r\n      // email: this.state.email,\r\n      // password: this.state.password,\r\n      // isAdmin: this.state.isAdmin\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        // this.props.sessionToken(rObj.sessionToken)\r\n        console.log(rObj)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createAdmin()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"4.8em\", marginBottom:'4em'}}>\r\n          {console.log(\"Admin loaded\")}\r\n          <h2>Admin Portal</h2>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/listing/create`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Create Listing\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/details`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Edit Customer\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid> */}\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/all`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"View All Customers\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Admin);;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx",["109"],"import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\ntype FilterProps = {\r\n  sort: any;\r\n  handleChangeSort: any;\r\n}\r\n\r\nclass FilterItems extends React.Component<FilterProps> {\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n          <InputLabel id=\"demo-simple-select-outlined-label\" style={{float:'right', margin:'0em 1em 0.5em 0em'}}>Sort By\r\n            <Select label=\"Sort\" className=\"form-control\" value={this.props.sort} onChange={this.props.handleChangeSort} style={{marginLeft:'0.6em', minWidth:'4em'}}>\r\n              <MenuItem value=\"\">Most Relevant</MenuItem>\r\n              <MenuItem value=\"lowest\">Price, low to high</MenuItem>\r\n              <MenuItem value=\"highest\">Price, high to low</MenuItem>\r\n            </Select>\r\n          </InputLabel>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterItems;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserEdit.tsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":19},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"114","severity":1,"message":"120","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":18},{"ruleId":"114","severity":1,"message":"121","line":2,"column":20,"nodeType":"116","messageId":"117","endLine":2,"endColumn":30},{"ruleId":"114","severity":1,"message":"122","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":22},{"ruleId":"114","severity":1,"message":"123","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":130,"column":1,"nodeType":"126","messageId":"127","endLine":130,"endColumn":49},{"ruleId":"114","severity":1,"message":"128","line":3,"column":16,"nodeType":"116","messageId":"117","endLine":3,"endColumn":27},{"ruleId":"114","severity":1,"message":"123","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"129","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":18},{"ruleId":"114","severity":1,"message":"130","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":22},{"ruleId":"114","severity":1,"message":"131","line":15,"column":8,"nodeType":"116","messageId":"117","endLine":15,"endColumn":14},{"ruleId":"114","severity":1,"message":"132","line":18,"column":8,"nodeType":"116","messageId":"117","endLine":18,"endColumn":19},{"ruleId":"114","severity":1,"message":"133","line":21,"column":8,"nodeType":"116","messageId":"117","endLine":21,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":178,"column":5,"nodeType":"136","messageId":"137","endLine":184,"endColumn":17,"fix":"138"},{"ruleId":"114","severity":1,"message":"129","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":18},{"ruleId":"114","severity":1,"message":"139","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":17},{"ruleId":"114","severity":1,"message":"140","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"@typescript-eslint/no-unused-vars","'FilterItems' is defined but never used.","Identifier","unusedVar",["141"],["142"],"'Redirect' is defined but never used.","'useHistory' is defined but never used.","'StoreItemsList' is defined but never used.","'Link' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'GridSpacing' is defined but never used.","'CardHeader' is defined but never used.","'CardActionArea' is defined but never used.","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"143","text":"144"},"'CardMedia' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",[5057,5059],"."]