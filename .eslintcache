[{"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx":"1","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts":"2","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx":"3","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx":"4","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx":"5","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx":"6","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx":"7","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx":"8","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx":"9","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItems.tsx":"10","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx":"11","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx":"12","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx":"13","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx":"14","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx":"15","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx":"16","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx":"17","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx":"18","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx":"19","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserEdit.tsx":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":4514,"mtime":1610072152704,"results":"24","hashOfConfig":"22"},{"size":1616,"mtime":1608064390132,"results":"25","hashOfConfig":"22"},{"size":5851,"mtime":1608062193212,"results":"26","hashOfConfig":"22"},{"size":4200,"mtime":1608062918479,"results":"27","hashOfConfig":"22"},{"size":4081,"mtime":1609961161416,"results":"28","hashOfConfig":"22"},{"size":5428,"mtime":1608081173189,"results":"29","hashOfConfig":"22"},{"size":4173,"mtime":1610052222307,"results":"30","hashOfConfig":"22"},{"size":919,"mtime":1608083751603,"results":"31","hashOfConfig":"22"},{"size":1091,"mtime":1610059201108,"results":"32","hashOfConfig":"22"},{"size":3637,"mtime":1610058545240,"results":"33","hashOfConfig":"22"},{"size":4781,"mtime":1610064604622,"results":"34","hashOfConfig":"22"},{"size":98,"mtime":1609882893875,"results":"35","hashOfConfig":"22"},{"size":950,"mtime":1610073383250,"results":"36","hashOfConfig":"22"},{"size":11165,"mtime":1610076518301,"results":"37","hashOfConfig":"22"},{"size":4003,"mtime":1610067032210,"results":"38","hashOfConfig":"22"},{"size":409,"mtime":1610034454732,"results":"39","hashOfConfig":"22"},{"size":1043,"mtime":1610069340197,"results":"40","hashOfConfig":"22"},{"size":7191,"mtime":1610074042572,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1q2qrcs",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx",[],["87","88"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx",["89"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx",[],["90","91"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx",["92","93"],"import React from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n// import Register from './Register';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n      Store Name\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype LoginProps = {\r\n  updateToken: any;\r\n}\r\n\r\ntype LoginState = {\r\n  email: string;\r\n  password: string;\r\n  history: string;\r\n}\r\n\r\nexport default class Login extends React.Component<LoginProps, LoginState> {\r\n  constructor (props: LoginProps) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      history: ''\r\n    }\r\n  }\r\n\r\n  setEmail = (e: any) => {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  setPassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = 'http://localhost:8080/user/login/';\r\n    const body = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj =>{ \r\n        this.props.updateToken(rObj.sessionToken)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className=\"paper\">\r\n          <Avatar className=\"avatar\" style={{backgroundColor:'#f50057'}}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form onSubmit={this.handleSubmit} className=\"formRegister\" noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange = {this.setEmail.bind(this)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange = {this.setPassword.bind(this)}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{marginTop:\"1em\", marginBottom:'0.8em'}}\r\n              className=\"submitRegister\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Link href=\"/user/register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItems.tsx",["94"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx",["95","96"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ItemDetailView from './ItemDetailView';\r\n\r\ntype ItemProps = {\r\n  item: any;\r\n  key: any;\r\n  classes: any;\r\n}\r\n\r\ntype ItemState = {\r\n  itemName: string;\r\n  storeItem: any[];\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Item extends React.Component<ItemProps, ItemState> {\r\n  state = {\r\n    searchNodes: '',\r\n    itemName: '',\r\n    storeItem: []\r\n  }\r\n\r\n  handleClick = () => {\r\n    // this.setState({\r\n    //   itemName: this.props.item.itemName\r\n    // })\r\n    fetch(`http://localhost:8080/listing/${this.props.item.id}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(r => r.json())\r\n      .then(obj => this.setState({ storeItem: obj.listing }))\r\n \r\n  }\r\n\r\n  toUpperCase = (str: string) => {\r\n    return str\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map(function(word) {\r\n        return word[0].toUpperCase() + word.substr(1);\r\n    })\r\n    .join(' ');\r\n    }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Link to={`/listing/${this.props.item.id}`} style={{textDecoration:\"none\"}} >\r\n        <Card className={classes.root} >   \r\n          <CardActionArea onClick={this.handleClick}>            \r\n            <CardMedia\r\n              className=\"media\"\r\n              // image={(this.props.item.imgURL)}\r\n              image={require(\"./../../assets/\" + this.props.item.imgURL + \".jpg\").default}\r\n              title=\"furniture\"\r\n              style={{height: 200, paddingTop: '56.25%'}}\r\n            />\r\n            <CardHeader\r\n              title={this.toUpperCase(this.props.item.itemName)}\r\n              // subheader={\"$\" + this.props.item.price}\r\n              style={{paddingBottom:'0'}}\r\n            />\r\n            <Rating id=\"rating\" name=\"size-small\" defaultValue={5} size=\"small\" readOnly style={{paddingLeft:'0.7em', color:'black'}}/>\r\n            <CardContent style={{paddingBottom:'0', paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {\"$\" + this.props.item.price}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardContent style={{paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {this.toUpperCase(this.props.item.color)}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardContent style={{ paddingTop:'0'}}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {this.props.item.description}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        </Link>\r\n        {/* <ItemDetailView itemName={this.state.storeItem}/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n{/* <ItemDetailView item={itemObj} key={i}/> */}\r\nexport default withStyles(styles, { withTheme: true })(Item);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx",["97"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx",["98","99","100","101","102","103"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx",["104","105"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype AdminProps = {\r\n  sessionToken: any;\r\n  classes: any;\r\n}\r\n\r\ntype AdminState = {\r\n  // email: string;\r\n  // password: string;\r\n  // isAdmin: boolean;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Admin extends React.Component <AdminProps, AdminState> {\r\n  constructor (props: AdminProps) {\r\n    super(props);\r\n    this.state = {\r\n      // email: '',\r\n      // password: '',\r\n      // isAdmin: false,\r\n    }\r\n  }\r\n\r\n  createAdmin = () => {\r\n    const url = 'http://localhost:8080/user/admin';\r\n    const body = {\r\n      // email: this.state.email,\r\n      // password: this.state.password,\r\n      // isAdmin: this.state.isAdmin\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        // this.props.sessionToken(rObj.sessionToken)\r\n        console.log(rObj)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createAdmin()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"4.8em\", marginBottom:'4em'}}>\r\n          {console.log(\"Admin loaded\")}\r\n          <h2>Admin Portal</h2>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/listing/create`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Create Listing\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/details`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Edit Customer\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/all`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"View All Customers\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Admin);;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx",["106"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserEdit.tsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":19},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"111","severity":1,"message":"117","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":18},{"ruleId":"111","severity":1,"message":"118","line":2,"column":20,"nodeType":"113","messageId":"114","endLine":2,"endColumn":30},{"ruleId":"111","severity":1,"message":"119","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":22},{"ruleId":"111","severity":1,"message":"120","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":114,"column":1,"nodeType":"123","messageId":"124","endLine":114,"endColumn":49},{"ruleId":"111","severity":1,"message":"125","line":3,"column":16,"nodeType":"113","messageId":"114","endLine":3,"endColumn":27},{"ruleId":"111","severity":1,"message":"126","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"127","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":18},{"ruleId":"111","severity":1,"message":"128","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":22},{"ruleId":"111","severity":1,"message":"129","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":18},{"ruleId":"111","severity":1,"message":"130","line":17,"column":8,"nodeType":"113","messageId":"114","endLine":17,"endColumn":19},{"ruleId":"111","severity":1,"message":"131","line":20,"column":8,"nodeType":"113","messageId":"114","endLine":20,"endColumn":17},{"ruleId":"111","severity":1,"message":"127","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":18},{"ruleId":"111","severity":1,"message":"132","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":17},{"ruleId":"111","severity":1,"message":"133","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'FilterItems' is defined but never used.","Identifier","unusedVar",["134"],["135"],"'Redirect' is defined but never used.","'useHistory' is defined but never used.","'StoreItemsList' is defined but never used.","'ItemDetailView' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'GridSpacing' is defined but never used.","'Link' is defined but never used.","'CardHeader' is defined but never used.","'CardActionArea' is defined but never used.","'IconButton' is defined but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'CardMedia' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]