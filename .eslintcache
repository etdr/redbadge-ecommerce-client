[{"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx":"1","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts":"2","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx":"3","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx":"4","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx":"5","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx":"6","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx":"7","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx":"8","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx":"9","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx":"10","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx":"11","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx":"12","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx":"13","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx":"14","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx":"15","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx":"16","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx":"17","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx":"18","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":5625,"mtime":1610666581030,"results":"23","hashOfConfig":"21"},{"size":1616,"mtime":1608064390132,"results":"24","hashOfConfig":"21"},{"size":5851,"mtime":1608062193212,"results":"25","hashOfConfig":"21"},{"size":4200,"mtime":1608062918479,"results":"26","hashOfConfig":"21"},{"size":5530,"mtime":1610666742539,"results":"27","hashOfConfig":"21"},{"size":5661,"mtime":1610658852564,"results":"28","hashOfConfig":"21"},{"size":4423,"mtime":1610650927635,"results":"29","hashOfConfig":"21"},{"size":1046,"mtime":1610664441267,"results":"30","hashOfConfig":"21"},{"size":11970,"mtime":1610657938921,"results":"31","hashOfConfig":"21"},{"size":4781,"mtime":1610064604622,"results":"32","hashOfConfig":"21"},{"size":934,"mtime":1610664452359,"results":"33","hashOfConfig":"21"},{"size":943,"mtime":1610567940585,"results":"34","hashOfConfig":"21"},{"size":11385,"mtime":1610655175577,"results":"35","hashOfConfig":"21"},{"size":4011,"mtime":1610138115128,"results":"36","hashOfConfig":"21"},{"size":808,"mtime":1610589879638,"results":"37","hashOfConfig":"21"},{"size":1043,"mtime":1610069340197,"results":"38","hashOfConfig":"21"},{"size":2604,"mtime":1610590739656,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1q2qrcs",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx",[],["86","87"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx",["88"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx",[],["89","90"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx",["91","92"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx",["93"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx",["94","95","96","97"],"import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Reviews from './../Reviews/Reviews';\r\nimport ItemDetailView from './ItemDetailView';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\ntype ItemProps = {\r\n  item: any;\r\n  key: any;\r\n  classes: any;\r\n  adminStatus: boolean;\r\n  sessionToken: any;\r\n  fetchStoreItems: any;\r\n}\r\n\r\ntype ItemState = {\r\n  storeItem: any;\r\n  show: boolean;\r\n  itemName: string;\r\n  color: string;\r\n  description: string;\r\n  price: number;\r\n  itemNum: number;\r\n  imgURL: string;\r\n  active: boolean;\r\n}\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction modalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    // padding: theme.spacing(2, 4, 3),\r\n  },\r\n})\r\n\r\nclass Item extends React.Component<ItemProps, ItemState> {\r\n  constructor (props: ItemProps) {\r\n    super(props);\r\n      this.state = {\r\n        // searchNodes: '',\r\n        storeItem: [],\r\n        show: false,\r\n        itemName: '',\r\n        color: '',\r\n        description: '',\r\n        price: 0,\r\n        itemNum: 0,\r\n        imgURL: '',\r\n        active: false,\r\n      }\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.showModal = this.showModal.bind(this);\r\n      this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  setItemName = (e: any) => {\r\n    this.setState({itemName: e.target.value});\r\n  }\r\n\r\n  setColor = (e: any) => {\r\n    this.setState({color: e.target.value});\r\n  }\r\n\r\n  setDescription = (e: any) => {\r\n    this.setState({description: e.target.value});\r\n  }\r\n\r\n  setPrice = (e: any) => {\r\n    this.setState({price: e.target.value});\r\n  }\r\n\r\n  setItemNum = (e: any) => {\r\n    this.setState({itemNum: e.target.value});\r\n  }\r\n\r\n  setImgURL = (e: any) => {\r\n    this.setState({imgURL: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = `http://localhost:8080/listing/${this.props.item.id}`;\r\n    const body = {\r\n      itemName: this.state.itemName || this.props.item.itemName,\r\n      color: this.state.color || this.props.item.color,\r\n      description: this.state.description || this.props.item.description,\r\n      price: this.state.price || this.props.item.price,\r\n      itemNum: this.state.itemNum || this.props.item.itemNum,\r\n      imgURL: this.state.imgURL || this.props.item.imgURL,\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n        this.props.fetchStoreItems()\r\n        this.setState({ active: false }) // turn toggle off after editing item\r\n      })\r\n  }\r\n\r\n  handleClick = () => {\r\n    fetch(`http://localhost:8080/listing/${this.props.item.id}`, {\r\n      method: 'GET'\r\n    }).then(r => r.json())\r\n      .then(obj => {\r\n        this.setState({ storeItem: obj.listing })\r\n        console.log(obj.listing)\r\n      })\r\n  }\r\n\r\n  deleteListing = () => {\r\n    fetch(`http://localhost:8080/listing/${this.props.item.id}`, {\r\n      method: 'DELETE',\r\n      headers: new Headers({\r\n          'Content-Type': 'application/json',\r\n          'Authorization': this.props.sessionToken\r\n      })\r\n    }) .then(() => this.props.fetchStoreItems())\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  toggle = () => {\r\n    const showEdit = this.state.active\r\n    this.setState({active: !showEdit})\r\n  }\r\n\r\n  toUpperCase = (str: string) => {\r\n    return str\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map(function(word) {\r\n        return word[0].toUpperCase() + word.substr(1);\r\n    })\r\n    .join(' ');\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Card className={classes.root} >\r\n        {/* if the user is an admin, show the delete button */}\r\n          {this.props.adminStatus ?    \r\n            <IconButton className=\"deleteButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} \r\n              onClick={e =>\r\n                      window.confirm(\"Are you sure you wish to delete this item?\") && this.deleteListing()\r\n              }>\r\n              <DeleteIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>\r\n            :\r\n            null\r\n          }\r\n        {/* if the user is an admin, show the edit button */}\r\n          {this.props.adminStatus ?    \r\n            <IconButton className=\"createButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} onClick={this.toggle}>\r\n              <CreateIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>\r\n            :\r\n            null\r\n          }\r\n          \r\n            {/* display user edit form when create icon has been clicked, otherwise display user info */}\r\n            {this.state.active === false ? \r\n              <Link to={`/listing/${this.props.item.id}`} style={{textDecoration:'none', color:'black'}}>\r\n                <CardActionArea onClick={this.handleClick}>            \r\n                  <CardMedia\r\n                    className=\"media\"\r\n                    image={require(\"./../../assets/\" + this.props.item.imgURL + \".jpg\").default}\r\n                    title=\"furniture\"\r\n                    style={{height: 200, paddingTop: '56.25%'}}\r\n                  />\r\n                  <CardHeader\r\n                    title={this.toUpperCase(this.props.item.itemName)}\r\n                    style={{paddingBottom:'0'}}\r\n                  />\r\n                  <Rating id=\"rating\" name=\"size-small\" defaultValue={5} size=\"small\" readOnly style={{paddingLeft:'0.7em', color:'black'}}/>\r\n                  <CardContent style={{paddingBottom:'0', paddingTop:'0'}}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"$\" + this.props.item.price}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardContent style={{paddingTop:'0'}}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {this.toUpperCase(this.props.item.color)}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardContent style={{ paddingTop:'0'}}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {this.props.item.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Link>\r\n            :\r\n              <div className=\"paper\" style={{marginTop:'0em'}}>\r\n                <form onSubmit={this.handleSubmit} className=\"formEditListing\" style={{ width: '70%' }} noValidate>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"itemName\"\r\n                    label=\"Item Name\"\r\n                    name=\"itemName\"\r\n                    autoFocus\r\n                    defaultValue={this.props.item.itemName}\r\n                    onChange = {this.setItemName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"itemColor\"\r\n                    label=\"Color\"\r\n                    id=\"itemColor\"\r\n                    defaultValue={this.props.item.color}\r\n                    onChange = {this.setColor.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"itemDescription\"\r\n                    label=\"Description\"\r\n                    id=\"itemDescription\"\r\n                    defaultValue={this.props.item.description}\r\n                    onChange = {this.setDescription.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"itemPrice\"\r\n                    label=\"Price (Do not include $)\"\r\n                    id=\"itemPrice\"\r\n                    defaultValue={this.props.item.price}\r\n                    onChange = {this.setPrice.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"itemNum\"\r\n                    label=\"Item Number\"\r\n                    id=\"itemNum\"\r\n                    defaultValue={this.props.item.itemNum}\r\n                    onChange = {this.setItemNum.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    defaultValue={this.props.item.imgURL}\r\n                    onChange = {this.setImgURL.bind(this)}\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{marginTop:\"1em\", marginBottom:'5em'}}\r\n                    className=\"submitEdit\" >\r\n                    Edit Listing\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            }\r\n          <Button size=\"small\" color=\"secondary\" onClick={this.showModal}>Reviews</Button>\r\n          <Modal\r\n            open={this.state.show}\r\n            onClose={this.closeModal}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh', overflow:'scroll'}}\r\n          >\r\n            <Reviews showState={this.state.show} reviewItem={this.state.storeItem}/>\r\n          </Modal>\r\n        </Card>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n{/* <ItemDetailView item={itemObj} key={i}/> */}\r\nexport default withStyles(styles, { withTheme: true })(Item);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx",["98"],"import React from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\nimport User from './User'\r\n\r\ntype UserProps = {\r\n  users: any;\r\n  fetchUsers: any;\r\n  sessionToken: any;\r\n  token: any;\r\n}\r\n\r\nexport default class UserList extends React.Component<UserProps> {\r\n\r\n  constructor (props: UserProps) {\r\n    super(props);\r\n    this.state = {\r\n    } \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"6em\", marginBottom:'4em' }}>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n              {this.props.users.map((userObj: any, i: any) => <Grid item xs={12} sm={6}>\r\n                <User user={userObj} key={i}users={this.props.users} fetchUsers={this.props.fetchUsers} sessionToken={this.props.token}/>\r\n                </Grid> )}\r\n          </Grid>      \r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx",["99"],"import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype UserProps = {\r\n  user: any;\r\n  key: any;\r\n  classes: any;\r\n  users: any;\r\n  fetchUsers: any;\r\n  sessionToken: any;\r\n}\r\n\r\ntype UserState ={\r\n  user: any[];\r\n  active: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  isAdmin: boolean;\r\n  email: string;\r\n  password: string;\r\n  addressLn1: string;\r\n  addressLn2: string;\r\n  city: string;\r\n  state: string;\r\n  zipcode: number;\r\n  phone: number;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap',\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    marginTop: '0'\r\n  },\r\n})\r\n\r\nclass User extends React.Component<UserProps, UserState> {\r\n  constructor (props: UserProps) {\r\n    super(props);\r\n    this.state = {\r\n      // searchNodes: '',\r\n      user: [],\r\n      active: false,\r\n      firstName: '',\r\n      lastName: '',\r\n      isAdmin: false,\r\n      email: '',\r\n      password: '',\r\n      addressLn1: '',\r\n      addressLn2: '',\r\n      city: '',\r\n      state: '',\r\n      zipcode: 0,\r\n      phone: 0,\r\n    }\r\n  }\r\n\r\n  setFirstName = (e: any) => {\r\n    this.setState({firstName: e.target.value});\r\n  }\r\n\r\n  setLastName = (e: any) => {\r\n    this.setState({lastName: e.target.value});\r\n  }\r\n\r\n  setIsAdmin = (e: any) => {\r\n    this.setState({isAdmin: e.target.value});\r\n  }\r\n\r\n  setEmail = (e: any) => {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  setPassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  setAddressLn1 = (e: any) => {\r\n    this.setState({addressLn1: e.target.value});\r\n  }\r\n  \r\n  setAddressLn2 = (e: any) => {\r\n    this.setState({addressLn2: e.target.value});\r\n  }\r\n\r\n  setCity = (e: any) => {\r\n    this.setState({city: e.target.value});\r\n  }\r\n\r\n  setStateName = (e: any) => {\r\n    this.setState({state: e.target.value});\r\n  }\r\n\r\n  setZipcode = (e: any) => {\r\n    this.setState({zipcode: e.target.value});\r\n  }\r\n\r\n  setPhone = (e: any) => {\r\n    this.setState({phone: e.target.value});\r\n  }\r\n\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const url = 'http://localhost:8080/user/details';\r\n    const body = {\r\n      firstName: this.state.firstName || this.props.user.firstName,\r\n      lastName: this.state.lastName || this.props.user.lastName,\r\n      isAdmin: this.state.isAdmin || this.props.user.isAdmin,\r\n      email: this.state.email || this.props.user.email,\r\n      password: this.state.password || this.props.user.password,\r\n      addressLn1: this.state.addressLn1 || this.props.user.addressLn1,\r\n      addressLn2: this.state.addressLn2 || this.props.user.addressLn2,\r\n      city: this.state.city || this.props.user.city,\r\n      state: this.state.state || this.props.user.state,\r\n      zipcode: this.state.zipcode || this.props.user.zipcode,\r\n      phone: this.state.phone || this.props.user.phone\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        console.log(rObj)\r\n        this.props.fetchUsers()\r\n        this.setState({ active: false }) // turn toggle off after editing user info\r\n      })\r\n    }\r\n\r\n  fetchUsers = () => {\r\n    fetch(`http://localhost:8080/user/${this.props.user.id}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(r => r.json())\r\n      .then(obj => this.setState({ user: obj.user }))\r\n  }\r\n\r\n  deleteUser = () => {\r\n    fetch(`http://localhost:8080/user/${this.props.user.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken\r\n            })\r\n        }) .then(() => this.props.fetchUsers())\r\n  }\r\n\r\n  toggle = () => {\r\n    const showEdit = this.state.active\r\n    this.setState({active: !showEdit})\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.fetchUsers()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Card className={classes.root} >   \r\n            <IconButton className=\"deleteButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} \r\n            onClick={e =>\r\n                    window.confirm(\"Are you sure you wish to delete this item?\") && this.deleteUser()\r\n            }>\r\n              <DeleteIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>\r\n            <IconButton className=\"createButton\" color=\"inherit\" aria-label=\"menu\" style={{color: 'rgba(0, 0, 0, 0.87)', float:'right', height:'30px', width:'30px'}} onClick={this.toggle}>\r\n              <CreateIcon style={{height:'25px', width:'25px'}}/>\r\n            </IconButton>            \r\n          {/* display user edit form when create icon has been clicked, otherwise display user info */}\r\n            {this.state.active === false ? (\r\n              <CardContent> \r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {this.props.user.firstName  + ' ' + this.props.user.lastName}\r\n                  <br/>\r\n                  {String(this.props.user.isAdmin)}\r\n                  <br/>\r\n                  {this.props.user.email}\r\n                  <br/>\r\n                  {this.props.user.phone}\r\n                  <br/>\r\n                  {this.props.user.addressLn1}\r\n                  <br/>\r\n                  {this.props.user.addressLn2}\r\n                  <br/>\r\n                  {this.props.user.city}\r\n                  <br/>\r\n                  {this.props.user.state}\r\n                  <br/>\r\n                  {this.props.user.zipcode}\r\n                </Typography>\r\n              </CardContent>) : (\r\n              <div className=\"paper\" style={{marginTop:'0em'}}>\r\n                <form onSubmit={this.handleSubmit} className=\"formEditListing\" style={{ width: '70%' }} noValidate>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    name={\"firstName\"}\r\n                    autoFocus\r\n                    defaultValue={this.props.user.firstName}\r\n                    onChange = {this.setFirstName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    id=\"lastName\"\r\n                    defaultValue={this.props.user.lastName}\r\n                    onChange = {this.setLastName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"isAdmin\"\r\n                    label=\"Admin Access (true or false)\"\r\n                    id=\"isAdmin\"\r\n                    defaultValue={this.props.user.isAdmin}\r\n                    onChange = {this.setIsAdmin.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    defaultValue={this.props.user.email}\r\n                    onChange = {this.setEmail.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"addressLn1\"\r\n                    label=\"Address Line 1\"\r\n                    id=\"addressLn1\"\r\n                    defaultValue={this.props.user.addressLn1}\r\n                    onChange = {this.setAddressLn1.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"addressLn2\"\r\n                    label=\"Address Line 2\"\r\n                    id=\"addressLn2\"\r\n                    defaultValue={this.props.user.addressLn2}\r\n                    onChange = {this.setAddressLn2.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                    defaultValue={this.props.user.city}\r\n                    onChange = {this.setCity.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"state\"\r\n                    label=\"State\"\r\n                    id=\"state\"\r\n                    defaultValue={this.props.user.state}\r\n                    onChange = {this.setStateName.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"zipcode\"\r\n                    label=\"Zipcode\"\r\n                    id=\"zipcode\"\r\n                    defaultValue={this.props.user.zipcode}\r\n                    onChange = {this.setZipcode.bind(this)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    id=\"phone\"\r\n                    defaultValue={this.props.user.phone}\r\n                    onChange = {this.setPhone.bind(this)}\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{marginTop:\"1em\", marginBottom:'5em'}}\r\n                    className=\"submitCreate\" >\r\n                    Edit Customer\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(User);","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx",["100","101"],"import React from 'react';\r\nimport { Link} from 'react-router-dom'\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype AdminProps = {\r\n  sessionToken: any;\r\n  classes: any;\r\n}\r\n\r\ntype AdminState = {\r\n  // email: string;\r\n  // password: string;\r\n  // isAdmin: boolean;\r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n    wrap: 'nowrap'\r\n  },\r\n  media: {\r\n    height: 300,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Admin extends React.Component <AdminProps, AdminState> {\r\n  constructor (props: AdminProps) {\r\n    super(props);\r\n    this.state = {\r\n      // email: '',\r\n      // password: '',\r\n      // isAdmin: false,\r\n    }\r\n  }\r\n\r\n  createAdmin = () => {\r\n    const url = 'http://localhost:8080/user/admin';\r\n    const body = {\r\n      // email: this.state.email,\r\n      // password: this.state.password,\r\n      // isAdmin: this.state.isAdmin\r\n    }\r\n  \r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': this.props.sessionToken\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(r => r.json())\r\n      .then(rObj => {\r\n        // this.props.sessionToken(rObj.sessionToken)\r\n        console.log(rObj)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createAdmin()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n        <Container maxWidth=\"lg\" style={{ marginTop:\"4.8em\", marginBottom:'4em'}}>\r\n          {console.log(\"Admin loaded\")}\r\n          <h2>Admin Portal</h2>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/listing/create`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Create Listing\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/details`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"Edit Customer\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid> */}\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.root} >   \r\n                <Link to={`/user/all`} style={{textDecoration:\"none\"}} >\r\n                  <CardActionArea> \r\n                    <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {\"View All Customers\"}\r\n                    </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Admin);;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx",["102"],"import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\ntype FilterProps = {\r\n  sort: any;\r\n  handleChangeSort: any;\r\n}\r\n\r\nclass FilterItems extends React.Component<FilterProps> {\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n          <InputLabel id=\"demo-simple-select-outlined-label\" style={{float:'right', margin:'0em 1em 0.5em 0em'}}>Sort By\r\n            <Select label=\"Sort\" className=\"form-control\" value={this.props.sort} onChange={this.props.handleChangeSort} style={{marginLeft:'0.6em', minWidth:'4em'}}>\r\n              <MenuItem value=\"\">Most Relevant</MenuItem>\r\n              <MenuItem value=\"lowest\">Price, low to high</MenuItem>\r\n              <MenuItem value=\"highest\">Price, high to low</MenuItem>\r\n            </Select>\r\n          </InputLabel>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterItems;","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx",["103","104"],"import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\ntype ReviewsProps = {\r\n  classes: any;\r\n  showState: boolean;\r\n  reviewItem: any;\r\n}\r\n\r\ntype ReviewsState = {\r\n  \r\n}\r\n\r\nconst styles = (theme: any) => createStyles({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    // overflow:'scroll',\r\n  },\r\n})\r\n\r\nclass Reviews extends React.Component<ReviewsProps, ReviewsState> {\r\n  constructor (props: ReviewsProps) {\r\n    super(props);\r\n      this.state = {\r\n        // showState: true\r\n      }\r\n    }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <div  className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">{this.props.reviewItem}</h2>\r\n          <p id=\"simple-modal-description\">\r\n          {this.props.reviewItem.itemName}\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n          </p>\r\n          {/* <SimpleModal /> */}\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Reviews);",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":13,"column":8,"nodeType":"111","messageId":"112","endLine":13,"endColumn":24},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","severity":1,"message":"115","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":24},{"ruleId":"109","severity":1,"message":"116","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":22},{"ruleId":"109","severity":1,"message":"116","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":22},{"ruleId":"109","severity":1,"message":"117","line":45,"column":10,"nodeType":"111","messageId":"112","endLine":45,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":162,"column":5,"nodeType":"120","messageId":"121","endLine":168,"endColumn":13,"fix":"122"},{"ruleId":"123","severity":1,"message":"124","line":350,"column":1,"nodeType":"125","messageId":"126","endLine":350,"endColumn":49},{"ruleId":"109","severity":1,"message":"127","line":3,"column":16,"nodeType":"111","messageId":"112","endLine":3,"endColumn":27},{"ruleId":"118","severity":1,"message":"119","line":162,"column":5,"nodeType":"120","messageId":"121","endLine":168,"endColumn":17,"fix":"128"},{"ruleId":"109","severity":1,"message":"129","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"109","severity":1,"message":"130","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":17},{"ruleId":"109","severity":1,"message":"131","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"132","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"133","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":13},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'StoreItemsSearch' is defined but never used.","Identifier","unusedVar",["134"],["135"],"'Redirect' is defined but never used.","'ItemDetailView' is defined but never used.","'modalStyle' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"136","text":"137"},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'GridSpacing' is defined but never used.",{"range":"138","text":"137"},"'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Component' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",[4591,4593],".",[4396,4398]]