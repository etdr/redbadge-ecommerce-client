[{"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx":"1","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts":"2","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx":"3","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx":"4","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx":"5","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx":"6","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx":"7","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx":"8","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx":"9","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx":"10","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx":"11","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx":"12","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx":"13","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx":"14","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx":"15","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx":"16","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx":"17","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx":"18","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx":"19"},{"size":500,"mtime":1610994517413,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":6035,"mtime":1610760649501,"results":"23","hashOfConfig":"21"},{"size":1616,"mtime":1608064390132,"results":"24","hashOfConfig":"21"},{"size":5851,"mtime":1608062193212,"results":"25","hashOfConfig":"21"},{"size":4200,"mtime":1608062918479,"results":"26","hashOfConfig":"21"},{"size":5741,"mtime":1611023672957,"results":"27","hashOfConfig":"21"},{"size":6769,"mtime":1611022109773,"results":"28","hashOfConfig":"21"},{"size":5570,"mtime":1611022114666,"results":"29","hashOfConfig":"21"},{"size":1198,"mtime":1610766758481,"results":"30","hashOfConfig":"21"},{"size":10434,"mtime":1611024557127,"results":"31","hashOfConfig":"21"},{"size":5838,"mtime":1611022375660,"results":"32","hashOfConfig":"21"},{"size":995,"mtime":1610670881036,"results":"33","hashOfConfig":"21"},{"size":1955,"mtime":1611022368786,"results":"34","hashOfConfig":"21"},{"size":12137,"mtime":1610998810591,"results":"35","hashOfConfig":"21"},{"size":3461,"mtime":1611022475415,"results":"36","hashOfConfig":"21"},{"size":10025,"mtime":1611022189303,"results":"37","hashOfConfig":"21"},{"size":1158,"mtime":1610997147916,"results":"38","hashOfConfig":"21"},{"size":8164,"mtime":1611023912224,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q2qrcs",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\index.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\reportWebVitals.ts",[],["81","82"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\App.tsx",["83","84"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Admin from './components/Users/Admin';\nimport FilterItems from './components/StoreItems/FilterItems';\nimport ItemDetailView from './components/StoreItems/ItemDetailView';\nimport Login from './components/Auth/Login';\nimport Navbar from './components/Site/Navbar';\nimport Register from './components/Auth/Register';\nimport StoreItemsCreate from './components/StoreItems/StoreItemCreate';\nimport StoreItemsList from './components/StoreItems/StoreItemsList';\nimport UserList from './components/Users/UserList';\n \ntype AppState = {\n  token: string;\n  newToken: string;\n  userId: number;\n  setStoreItems: any;\n  storeItems: any[];\n  itemId: number;\n  users: any[];\n  filteredItems: any[];\n  sort: any;\n  isAdmin: any;\n  firstName: string;\n  searchTerm: string;\n  searchItems: any[];\n  rating: number;\n  redirect: boolean;\n  errorStatus: boolean;\n}\n\nclass App extends React.Component <{}, AppState> {\n  constructor (props: {}) {\n    super(props);\n    this.state = {\n      token: '',\n      newToken: '',\n      userId: -1,\n      setStoreItems: '',\n      storeItems: [],\n      itemId: 0,\n      users: [],\n      filteredItems: [],\n      sort: '',\n      isAdmin: false,\n      firstName: '',\n      searchTerm: '',\n      searchItems: [],\n      rating: 0,\n      redirect: false,\n      errorStatus: false\n    }\n  }\n\n  fetchStoreItems = () => {\n    fetch('http://localhost:8080/listing/', {\n      method: 'GET'\n    })\n      .then(r => r.json())\n      .then(obj => this.setState({ \n        storeItems: obj.listing, \n        filteredItems: obj.listing })) // filters items based on price\n      .catch(err => {console.log(err); {this.setState({errorStatus: true})}})\n  }\n\n  fetchUsers = () => {\n    fetch('http://localhost:8080/user/all/', {\n      method: 'GET'\n    })\n      .then(r => r.json())\n      .then(obj => this.setState({ users: obj.user }))\n      .catch(err => {console.log(err); {this.setState({errorStatus: true})}})\n  }\n\n  setToken = (token: string) => {\n    if (token) {\n      this.setState({token: token})\n    } else {\n      this.setState({token: localStorage.getItem('token') || ''}) \n    }\n    localStorage.setItem('token', token)\n  }\n\n  // updates the state for the token, userId,admin status, and first name when a user logs in or registers\n  updateToken = (newToken: any, updateId: any, updateAdmin: boolean, updateFirstName: string) => {\n    localStorage.setItem('token', newToken);\n    localStorage.setItem('id', updateId)\n    this.setState({token: newToken});\n    this.setState({userId: updateId});\n    this.setState({isAdmin: updateAdmin})\n    this.setState({firstName: updateFirstName})\n    console.log('Token: ', newToken)\n    console.log(\"User id: \", updateId)\n    console.log(\"Admin? :\", updateAdmin)\n    console.log(\"User first name:\", updateFirstName)\n  }\n\n  updateSearch = (storeItem: any[]) => {\n    this.setState({ storeItems: storeItem })\n    console.log(\"search\", storeItem)\n  }\n\n  updateItemId = (itemId: any) => {\n    this.setState({ itemId: itemId })\n    console.log('itemid', itemId)\n  }\n\n  // when user logs out, it redirects to '/' and resets the first name\n  clearToken = () => {\n    localStorage.clear();\n    this.setState({ redirect: true })\n    this.setState({ firstName: ''})\n  }\n\n  listItems = () => {\n    this.setState(state => {\n      // if state of sort is not empty, sort based on lowest or highest price\n      if(state.sort !== '') {\n        this.state.storeItems.sort((a,b) => (this.state.sort === 'lowest') ? (a.price < b.price ? 1 : -1) : (a.price > b.price ? 1 : -1))\n      } \n      else {\n        state.storeItems.sort((a,b) => (a.id > b.id ? 1: -1));\n      }\n      return {filteredItems: this.state.storeItems};\n    })\n  }\n\n  handleChangeSort = (e: any) => {\n    this.setState({sort: e.target.value})\n    this.listItems();\n  }\n\n  componentWillMount() {\n    this.setToken('')\n    this.fetchStoreItems()\n    this.fetchUsers()\n  }\n\n  render() {  \n    \n    return (\n      <div> \n        {/* {console.log(\"App token \" + this.state.rating)} */}\n        <Router>\n          <Navbar clickLogout={this.clearToken} sessionToken={this.state.token} adminStatus={this.state.isAdmin} userFirstName={this.state.firstName} searchItems={this.state.searchItems} updateSearch={this.updateSearch} fetchStoreItems={this.fetchStoreItems} />\n          {/* redirect to '/' when user logs out */}\n          {this.state.redirect ? (<Redirect to='/'/> && window.location.reload()) : null}\n          {/* if there is an issue fetching data, redirect to home page */}\n          {this.state.errorStatus ? (<Redirect to=\"/\" />) : null}\n          <Switch>\n            <Route path='/listing/create'><StoreItemsCreate sessionToken={this.state.token} fetchStoreItems={this.fetchStoreItems}/></Route>\n            <Route path='/user/register'><Register updateToken={this.updateToken} token={this.state.token}/></Route>\n            <Route path='/user/login' exact ><Login updateToken={this.updateToken} token={this.state.token} adminStatus={this.state.isAdmin}/></Route>\n            <Route path='/user/all' ><UserList users={this.state.users} fetchUsers={this.fetchUsers} sessionToken={this.state.token} token={this.state.token}/></Route>\n            <Route path='/' exact ><StoreItemsList sessionToken={this.state.token} adminStatus={this.state.isAdmin} storeItems={this.state.storeItems} fetchStoreItems={this.fetchStoreItems} sort={this.state.sort} handleChangeSort={this.handleChangeSort} updateItemId={this.updateItemId} /></Route>\n            <Route path='/listing/:id'><ItemDetailView storeItemId={this.state.itemId} sessionToken={this.state.token} userId={this.state.userId} adminStatus={this.state.isAdmin} /></Route>\n            <Route path='/user/admin'><Admin sessionToken={this.state.token}/></Route>\n            <Route path='sort'><FilterItems sort={this.state.sort} handleChangeSort={this.handleChangeSort} /></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\site\\Navbar.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Register.tsx",[],["85","86"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Site\\Navbar.tsx",["87"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Register.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Auth\\Login.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsList.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\Item.tsx",["88","89"],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemCreate.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\StoreItemsSearch.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\UserList.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\User.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Users\\Admin.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\ItemDetailView.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\StoreItems\\FilterItems.tsx",[],"C:\\Users\\heway\\Desktop\\ElevenFiftyProjects\\RedBadge\\redBadgeProject\\store-app\\src\\components\\Reviews\\Reviews.tsx",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":63,"column":40,"nodeType":"97","messageId":"98","endLine":63,"endColumn":76},{"ruleId":"95","severity":1,"message":"96","line":72,"column":40,"nodeType":"97","messageId":"98","endLine":72,"endColumn":76},{"ruleId":"91","replacedBy":"99"},{"ruleId":"93","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":16,"nodeType":"103","messageId":"104","endLine":2,"endColumn":24},{"ruleId":"101","severity":1,"message":"105","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":135,"column":40,"nodeType":"97","messageId":"98","endLine":135,"endColumn":76},{"ruleId":"95","severity":1,"message":"96","line":117,"column":40,"nodeType":"97","messageId":"98","endLine":117,"endColumn":76},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["106"],["107"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CardHeader' is defined but never used.","no-global-assign","no-unsafe-negation"]